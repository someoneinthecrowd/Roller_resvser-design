(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    296594,       5740]
NotebookOptionsPosition[    292017,       5660]
NotebookOutlinePosition[    292357,       5675]
CellTagsIndexPosition[    292314,       5672]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", "MPLColorMap", "]"}], "\n", 
 RowBox[{
  RowBox[{"<<", "\"\<http://pastebin.com/raw/pFsb4ZBS\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<SpherePlaneResistance.txt\>\""}], ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Xi]data", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XAdata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YAdata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YBdata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XCdata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YCdata", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "6"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YAVal", "=", 
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"\[Xi]data", ",", "YAdata"}], "}"}], "]"}], "]"}], "[", 
    "\[Delta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YBVal", "=", 
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"\[Xi]data", ",", "YBdata"}], "}"}], "]"}], "]"}], "[", 
    "\[Delta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YCVal", "=", 
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"\[Xi]data", ",", "YCdata"}], "}"}], "]"}], "]"}], "[", 
    "\[Delta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XAVal", "=", 
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"\[Xi]data", ",", "XAdata"}], "}"}], "]"}], "]"}], "[", 
    "\[Delta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XCVal", "=", 
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"\[Xi]data", ",", "XCdata"}], "}"}], "]"}], "]"}], "[", 
    "\[Delta]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AA", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"YAVal", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "YAVal", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "XAVal"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BB", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "YBVal", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "YBVal"}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"YCVal", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "YCVal", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "XCVal"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Resistance", "=", 
   RowBox[{"ArrayFlatten", "[", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"AA", ",", 
        RowBox[{"Transpose", "[", "BB", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"BB", ",", "CC"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.783179696330809*^9, 3.7831797121194153`*^9}, {
   3.783201683999731*^9, 3.783201684982665*^9}, {3.783201726545578*^9, 
   3.783201749983481*^9}, {3.783201929547756*^9, 3.7832019420241537`*^9}, {
   3.783202411342558*^9, 3.783202420999771*^9}, {3.783205092353408*^9, 
   3.78320509944588*^9}, {3.785605326155148*^9, 3.785605326360422*^9}, 
   3.785605448499626*^9},
 CellLabel->
  "(Debug) In[1]:=",ExpressionUUID->"782d742f-fc98-4be2-ac56-74816e96ed6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"0.3", " ", "t"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"0.03", " ", "t"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7856070195451193`*^9, 3.785607030959878*^9}},
 CellLabel->
  "(Debug) In[21]:=",ExpressionUUID->"ccd9d247-b353-41b4-a5ad-e6546d9f336d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.27`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}], "]"}]}], 
    "+", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.32999999999999996`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}], "]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.785607031356992*^9},
 CellLabel->
  "(Debug) Out[21]=",ExpressionUUID->"58c13958-f9a0-4451-b128-b94ca14d5ea4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"0.2", " ", "t"}], " ", "]"}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"0.3", " ", "t"}], "]"}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"0.02", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"0.2", " ", "t"}], " ", "]"}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"0.3", " ", "t"}], "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"0.02", " ", "t"}], "]"}]}]}], " ", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "500"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7856350669607487`*^9, 3.785635069819421*^9}, {
  3.785635148265295*^9, 3.785635230743485*^9}, {3.785635995845126*^9, 
  3.785636053080901*^9}, {3.785637503475966*^9, 3.7856375201960278`*^9}},
 CellLabel->
  "(Debug) In[322]:=",ExpressionUUID->"88b6bf90-f573-416e-b7b9-1f25217d4e24"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
DvpNRYRMG00zGhLKyf8Asim6tQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$235712#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-1.902725878304342, 
   1.9026711337195958`}, {-1.9998612757169054`, 1.6205891942585577`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.785637520711997*^9},
 CellLabel->
  "(Debug) Out[322]=",ExpressionUUID->"5e34f3b0-74fd-40e7-9041-1802f02952d1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "\[Omega]4_", 
        ",", "A1_", ",", "A2_", ",", "A3_", ",", "B1_", ",", " ", "B2_"}], 
       "}"}], ",", "t_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"B1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "-", "\[Omega]4"}], ")"}], "t"}], "]"}]}], 
        "+", 
        RowBox[{"B2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "+", "\[Omega]4"}], ")"}], " ", "t"}], 
          "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "B1"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "-", "\[Omega]4"}], ")"}], " ", "t"}], 
          "]"}]}], "+", 
        RowBox[{"B2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Omega]1", "+", "\[Omega]4"}], ")"}], " ", "t"}], 
          "]"}]}]}], ",", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A1", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]1"}], " ", "]"}]}], "+", 
         RowBox[{"A2", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}], "+", 
         RowBox[{"A3", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Omega]3", " ", "t"}], "]"}]}]}], ")"}]}], "}"}], ".", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"10", " ", "Degree"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bflat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "\[Omega]4_", 
       ",", "A1_", ",", "A2_", ",", "A3_", ",", "B1_", ",", " ", "B2_"}], 
      "}"}], ",", "t_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"B1", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Omega]1", "-", "\[Omega]4"}], ")"}], "t"}], "]"}]}], "+", 
      RowBox[{"B2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Omega]1", "+", "\[Omega]4"}], ")"}], " ", "t"}], 
        "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "B1"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Omega]1", "-", "\[Omega]4"}], ")"}], " ", "t"}], "]"}]}],
       "+", 
      RowBox[{"B2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Omega]1", "+", "\[Omega]4"}], ")"}], " ", "t"}], 
        "]"}]}]}], ",", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A1", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", "\[Omega]1"}], " ", "]"}]}], "+", 
       RowBox[{"A2", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}], "+", 
       RowBox[{"A3", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]3", " ", "t"}], "]"}]}]}], ")"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7856722950491667`*^9, 3.785672339853057*^9}},
 CellLabel->
  "(Debug) In[21]:=",ExpressionUUID->"80b3e592-854f-4b64-87e5-aad6a6bc1ecd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "\[Omega]4_", 
        ",", "A1_", ",", "A2_", ",", "A3_", ",", "B1_", ",", " ", "B2_"}], 
       "}"}], ",", "t_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", " ", "\[Omega]1"}], " ", "]"}]}], "+", 
          RowBox[{"B2", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}]}], ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]4", " ", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", " ", "\[Omega]1"}], " ", "]"}]}], "+", 
          RowBox[{"B2", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}]}], ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Omega]4", " ", "t"}], "]"}]}], ",", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A1", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]1"}], " ", "]"}]}], "+", 
         RowBox[{"A2", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}], "+", 
         RowBox[{"A3", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Omega]3", " ", "t"}], "]"}]}]}], ")"}]}], "}"}], ".", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"10", " ", "Degree"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bflat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "\[Omega]4_", 
       ",", "A1_", ",", "A2_", ",", "A3_", ",", "B1_", ",", " ", "B2_"}], 
      "}"}], ",", "t_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"B1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]1"}], " ", "]"}]}], "+", 
        RowBox[{"B2", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}]}], ")"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]4", " ", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"B1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]1"}], " ", "]"}]}], "+", 
        RowBox[{"B2", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}]}], ")"}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]4", " ", "t"}], "]"}]}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A1", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", "\[Omega]1"}], " ", "]"}]}], "+", 
       RowBox[{"A2", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}], "+", 
       RowBox[{"A3", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]3", " ", "t"}], "]"}]}]}], ")"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7856413033884287`*^9, 3.785641376708083*^9}, {
  3.785675657812881*^9, 3.785675672151462*^9}},
 CellLabel->
  "(Debug) In[23]:=",ExpressionUUID->"40b08115-e4af-4434-91ee-6999723d941c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"roller", "[", 
     RowBox[{"{", 
      RowBox[{
      "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "\[Omega]4_", 
       ",", "A1_", ",", "A2_", ",", "A3_", ",", "B1_", ",", " ", "B2_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "parameter", ",", "tMax", ",", "Rq", ",", "mq", ",", "Lq", ",", "F", 
        ",", "FLq", ",", "U\[CapitalOmega]q", ",", "Uq", ",", 
        "\[CapitalOmega]q", ",", "Q", ",", "quaternionRate", ",", 
        "\[IndentingNewLine]", "q", ",", "\[Phi]", ",", "\[Theta]", ",", 
        "\[Psi]", ",", "qIC", ",", "para", ",", "sol", ",", "data", ",", 
        "dct", ",", "tdata"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"parameter", "=", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3", ",", "\[Omega]4", 
          ",", "A1", ",", "A2", ",", "A3", ",", "B1", ",", "B2"}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"tMax", " ", "=", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"200", " ", "2", " ", 
              RowBox[{"\[Pi]", "/", 
               RowBox[{"parameter", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "50000.0"}], "]"}], 
           "*", "0"}], "+"}], "*)"}], "5000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"first", " ", "field", " ", "is", " ", "magnetic"}], " ", 
         ",", " ", 
         RowBox[{"second", " ", "is", " ", "gravity"}]}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Rq", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SuperscriptBox["q0", "2"], "+", 
             SuperscriptBox["q1", "2"], "-", 
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ",", 
            RowBox[{
             RowBox[{"2", "q1", " ", "q2"}], "+", 
             RowBox[{"2", "q0", " ", "q3"}]}], ",", 
            RowBox[{
             RowBox[{"2", "q1", " ", "q3"}], "-", 
             RowBox[{"2", "q0", " ", "q2"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "q1", " ", "q2"}], "-", 
             RowBox[{"2", "q0", " ", "q3"}]}], ",", 
            RowBox[{
             SuperscriptBox["q0", "2"], "-", 
             SuperscriptBox["q1", "2"], "+", 
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ",", 
            RowBox[{
             RowBox[{"2", "q2", " ", "q3"}], "+", 
             RowBox[{"2", "q0", " ", "q1"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", " ", "q1", " ", "q3"}], "+", 
             RowBox[{"2", " ", "q0", " ", "q2"}]}], ",", 
            RowBox[{
             RowBox[{"2", "q2", " ", "q3"}], "-", 
             RowBox[{"2", " ", "q0", " ", "q1"}]}], ",", " ", 
            RowBox[{
             SuperscriptBox["q0", "2"], "-", 
             SuperscriptBox["q1", "2"], "-", 
             SuperscriptBox["q2", "2"], "+", 
             SuperscriptBox["q3", "2"]}]}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"magnetic", " ", "moment"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mq", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "Rq", "]"}], " ", ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "   ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Lq", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{"Cross", "[", 
          RowBox[{"mq", ",", 
           RowBox[{"B", "[", 
            RowBox[{"parameter", ",", "t"}], "    ", "]"}]}], "   ", "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "force", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"F", " ", "=", 
        RowBox[{"{", 
         RowBox[{"0", " ", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"FLq", "=", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"F", ",", "Lq"}], "}"}], ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U\[CapitalOmega]q", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Inverse", "[", "Resistance", "]"}], ".", "FLq"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Uq", "=", 
        RowBox[{"U\[CapitalOmega]q", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalOmega]q", "=", 
        RowBox[{"U\[CapitalOmega]q", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;", "6"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Q", " ", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q0", " ", ",", 
            RowBox[{"-", "q1"}], ",", 
            RowBox[{"-", "q2"}], ",", 
            RowBox[{"-", "q3"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"q1", ",", "q0", ",", "q3", ",", 
            RowBox[{"-", "q2"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"q2", ",", 
            RowBox[{"-", "q3"}], ",", "q0", ",", "q1"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"q3", ",", "q2", ",", 
            RowBox[{"-", "q1"}], ",", "q0"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"equation", " ", "156"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"quaternionRate", "=", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"Q", ".", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "0", "}"}], ",", "\[CapitalOmega]q"}], "}"}], ",", 
            "1"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"qIC", " ", "=", " ", 
        RowBox[{"q", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ",", 
           RowBox[{"\[Theta]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ",", 
           RowBox[{"\[Psi]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"para", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"q0", "\[Rule]", 
           RowBox[{"q0", "[", "t", "]"}]}], ",", 
          RowBox[{"q1", "\[Rule]", 
           RowBox[{"q1", "[", "t", "]"}]}], ",", 
          RowBox[{"q2", "\[Rule]", 
           RowBox[{"q2", "[", "t", "]"}]}], ",", 
          RowBox[{"q3", "\[Rule]", 
           RowBox[{"q3", "[", "t", "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"q0", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"quaternionRate", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"q1", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"quaternionRate", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"q2", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"quaternionRate", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"q3", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"quaternionRate", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Uq", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Uq", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"q0", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"qIC", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"q1", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"qIC", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"q2", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"qIC", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"q3", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"qIC", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"q0", "[", "t", "]"}], ",", 
            RowBox[{"q1", "[", "t", "]"}], ",", 
            RowBox[{"q2", "[", "t", "]"}], ",", 
            RowBox[{"q3", "[", "t", "]"}], ",", 
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tMax"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "4000", ",", "1"}], "}"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"dct", "=", 
          RowBox[{"FourierDCT", "[", "data", "]"}]}], ";", "\n", "  ", 
         RowBox[{"tdata", "=", 
          RowBox[{"FourierDCT", "[", 
           RowBox[{
            RowBox[{"PadRight", "[", 
             RowBox[{
              RowBox[{"Take", "[", 
               RowBox[{"dct", ",", "2"}], "]"}], ",", "4000", ",", "0"}], 
             "]"}], ",", "3"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "[", "t", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "t"}], "]"}], "/.", 
          RowBox[{"t", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"tMax", " ", "0.5"}], ",", "tMax"}], "}"}]}], 
            "]"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", "t", "]"}], "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
          RowBox[{"t", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"200", " ", "2", " ", 
                RowBox[{"\[Pi]", "/", "\[Omega]1"}], " ", "0.5"}], ",", 
               RowBox[{"200", " ", "2", " ", 
                RowBox[{"\[Pi]", "/", "\[Omega]1"}], " ", "0.75"}], ",", 
               "1"}], "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"200", " ", "2", " ", 
          RowBox[{"\[Pi]", "/", "\[Omega]1"}], " ", "0.75"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"data1", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "/", 
               RowBox[{"(", "  ", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Pi]", "/", "\[Omega]2"}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "/.", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "4000", ",", "1"}], "}"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"data2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Pi]", " ", "/", "\[Omega]2"}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"y", "[", "t", "]"}], "/.", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "4000", ",", "1"}], "}"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"lm1", "=", 
          RowBox[{"LinearModelFit", "[", 
           RowBox[{
            RowBox[{"MovingAverage", "[", 
             RowBox[{"data1", ",", 
              RowBox[{"Round", "[", "      ", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "\[Omega]2"}]}], "]"}]}], "]"}], ",", 
            "x", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lm2", "=", 
          RowBox[{"LinearModelFit", "[", 
           RowBox[{
            RowBox[{"MovingAverage", "[", 
             RowBox[{"data2", ",", 
              RowBox[{"Round", "[", "      ", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "\[Omega]2"}]}], "]"}]}], "]"}], ",", 
            "x", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"sol", ",", 
           RowBox[{
            RowBox[{"lm1", "[", "\"\<BestFitParameters\>\"", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"lm2", "[", "\"\<BestFitParameters\>\"", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "*)"}], 
       "\[IndentingNewLine]", "sol"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rollerflat", "[", 
     RowBox[{"{", 
      RowBox[{
      "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "\[Omega]4_", 
       ",", "A1_", ",", "A2_", ",", "A3_", ",", "B1_", ",", " ", "B2_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "parameter", ",", "tMax", ",", "Rq", ",", "mq", ",", "Lq", ",", "F", 
        ",", "FLq", ",", "U\[CapitalOmega]q", ",", "Uq", ",", 
        "\[CapitalOmega]q", ",", "Q", ",", "quaternionRate", ",", 
        "\[IndentingNewLine]", "q", ",", "\[Phi]", ",", "\[Theta]", ",", 
        "\[Psi]", ",", "qIC", ",", "para", ",", "sol", ",", "data", ",", 
        "dct", ",", "tdata"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"parameter", "=", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3", ",", "\[Omega]4", 
          ",", "A1", ",", "A2", ",", "A3", ",", "B1", ",", "B2"}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"tMax", " ", "=", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"200", " ", "2", " ", 
             RowBox[{"\[Pi]", "/", 
              RowBox[{"parameter", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "50000.0"}], "]"}], 
          "+"}], "*)"}], "5000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"first", " ", "field", " ", "is", " ", "magnetic"}], " ", 
         ",", " ", 
         RowBox[{"second", " ", "is", " ", "gravity"}]}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Rq", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SuperscriptBox["q0", "2"], "+", 
             SuperscriptBox["q1", "2"], "-", 
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ",", 
            RowBox[{
             RowBox[{"2", "q1", " ", "q2"}], "+", 
             RowBox[{"2", "q0", " ", "q3"}]}], ",", 
            RowBox[{
             RowBox[{"2", "q1", " ", "q3"}], "-", 
             RowBox[{"2", "q0", " ", "q2"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "q1", " ", "q2"}], "-", 
             RowBox[{"2", "q0", " ", "q3"}]}], ",", 
            RowBox[{
             SuperscriptBox["q0", "2"], "-", 
             SuperscriptBox["q1", "2"], "+", 
             SuperscriptBox["q2", "2"], "-", 
             SuperscriptBox["q3", "2"]}], ",", 
            RowBox[{
             RowBox[{"2", "q2", " ", "q3"}], "+", 
             RowBox[{"2", "q0", " ", "q1"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", " ", "q1", " ", "q3"}], "+", 
             RowBox[{"2", " ", "q0", " ", "q2"}]}], ",", 
            RowBox[{
             RowBox[{"2", "q2", " ", "q3"}], "-", 
             RowBox[{"2", " ", "q0", " ", "q1"}]}], ",", " ", 
            RowBox[{
             SuperscriptBox["q0", "2"], "-", 
             SuperscriptBox["q1", "2"], "-", 
             SuperscriptBox["q2", "2"], "+", 
             SuperscriptBox["q3", "2"]}]}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"magnetic", " ", "moment"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"mq", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "Rq", "]"}], " ", ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "   ", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Lq", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{"Cross", "[", 
          RowBox[{"mq", ",", 
           RowBox[{"Bflat", "[", 
            RowBox[{"parameter", ",", "t"}], "    ", "]"}]}], "   ", "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "force", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"F", " ", "=", 
        RowBox[{"{", 
         RowBox[{"0", " ", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"FLq", "=", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"F", ",", "Lq"}], "}"}], ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"U\[CapitalOmega]q", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Inverse", "[", "Resistance", "]"}], ".", "FLq"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Uq", "=", 
        RowBox[{"U\[CapitalOmega]q", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalOmega]q", "=", 
        RowBox[{"U\[CapitalOmega]q", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;", "6"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Q", " ", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q0", " ", ",", 
            RowBox[{"-", "q1"}], ",", 
            RowBox[{"-", "q2"}], ",", 
            RowBox[{"-", "q3"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"q1", ",", "q0", ",", "q3", ",", 
            RowBox[{"-", "q2"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"q2", ",", 
            RowBox[{"-", "q3"}], ",", "q0", ",", "q1"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"q3", ",", "q2", ",", 
            RowBox[{"-", "q1"}], ",", "q0"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"equation", " ", "156"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"quaternionRate", "=", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"Q", ".", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "0", "}"}], ",", "\[CapitalOmega]q"}], "}"}], ",", 
            "1"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "/", "2"}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "/", "2"}], "]"}]}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"qIC", " ", "=", " ", 
        RowBox[{"q", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Phi]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ",", 
           RowBox[{"\[Theta]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ",", 
           RowBox[{"\[Psi]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"2", " ", "\[Pi]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"para", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"q0", "\[Rule]", 
           RowBox[{"q0", "[", "t", "]"}]}], ",", 
          RowBox[{"q1", "\[Rule]", 
           RowBox[{"q1", "[", "t", "]"}]}], ",", 
          RowBox[{"q2", "\[Rule]", 
           RowBox[{"q2", "[", "t", "]"}]}], ",", 
          RowBox[{"q3", "\[Rule]", 
           RowBox[{"q3", "[", "t", "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"q0", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"quaternionRate", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"q1", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"quaternionRate", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"q2", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"quaternionRate", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"q3", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"quaternionRate", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "'"}], "[", "t", "]"}], "==", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Uq", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Uq", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", "para"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"q0", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"qIC", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"q1", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"qIC", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"q2", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"qIC", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"q3", "[", "0", "]"}], "\[Equal]", 
             RowBox[{"qIC", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"q0", "[", "t", "]"}], ",", 
            RowBox[{"q1", "[", "t", "]"}], ",", 
            RowBox[{"q2", "[", "t", "]"}], ",", 
            RowBox[{"q3", "[", "t", "]"}], ",", 
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tMax"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "4000", ",", "1"}], "}"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"dct", "=", 
          RowBox[{"FourierDCT", "[", "data", "]"}]}], ";", "\n", "  ", 
         RowBox[{"tdata", "=", 
          RowBox[{"FourierDCT", "[", 
           RowBox[{
            RowBox[{"PadRight", "[", 
             RowBox[{
              RowBox[{"Take", "[", 
               RowBox[{"dct", ",", "2"}], "]"}], ",", "4000", ",", "0"}], 
             "]"}], ",", "3"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "[", "t", "]"}], "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", "t"}], "]"}], "/.", 
          RowBox[{"t", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"tMax", " ", "0.5"}], ",", "tMax"}], "}"}]}], 
            "]"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", "t", "]"}], "/.", 
           RowBox[{"sol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
          RowBox[{"t", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"200", " ", "2", " ", 
                RowBox[{"\[Pi]", "/", "\[Omega]1"}], " ", "0.5"}], ",", 
               RowBox[{"200", " ", "2", " ", 
                RowBox[{"\[Pi]", "/", "\[Omega]1"}], " ", "0.75"}], ",", 
               "1"}], "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"200", " ", "2", " ", 
          RowBox[{"\[Pi]", "/", "\[Omega]1"}], " ", "0.75"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"data1", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "/", 
               RowBox[{"(", "  ", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Pi]", "/", "\[Omega]2"}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "/.", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "4000", ",", "1"}], "}"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"data2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Pi]", " ", "/", "\[Omega]2"}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"y", "[", "t", "]"}], "/.", 
               RowBox[{"sol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "4000", ",", "1"}], "}"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"lm1", "=", 
          RowBox[{"LinearModelFit", "[", 
           RowBox[{
            RowBox[{"MovingAverage", "[", 
             RowBox[{"data1", ",", 
              RowBox[{"Round", "[", "      ", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "\[Omega]2"}]}], "]"}]}], "]"}], ",", 
            "x", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lm2", "=", 
          RowBox[{"LinearModelFit", "[", 
           RowBox[{
            RowBox[{"MovingAverage", "[", 
             RowBox[{"data2", ",", 
              RowBox[{"Round", "[", "      ", 
               RowBox[{"2", " ", 
                RowBox[{"\[Pi]", "/", "\[Omega]2"}]}], "]"}]}], "]"}], ",", 
            "x", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"sol", ",", 
           RowBox[{
            RowBox[{"lm1", "[", "\"\<BestFitParameters\>\"", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"lm2", "[", "\"\<BestFitParameters\>\"", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "*)"}], 
       "\[IndentingNewLine]", "sol"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"B", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "\[Omega]4_", 
        ",", "A1_", ",", "A2_", ",", "A3_", ",", "B1_", ",", " ", "B2_"}], 
       "}"}], ",", "t_"}], "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7832198247241173`*^9, 3.783219829250929*^9}, {
   3.783219976497387*^9, 3.783220031484853*^9}, {3.7832523797857447`*^9, 
   3.783252380006508*^9}, {3.7832524794368362`*^9, 3.783252518986904*^9}, {
   3.783252637347315*^9, 3.783252775116935*^9}, {3.783252920232254*^9, 
   3.783252921589716*^9}, {3.783252968006159*^9, 3.7832530011878347`*^9}, {
   3.783253366923991*^9, 3.783253367896839*^9}, {3.78325350379846*^9, 
   3.783253508059702*^9}, {3.783253558559843*^9, 3.783253627841465*^9}, {
   3.783253689598701*^9, 3.783253690572348*^9}, {3.78325372141393*^9, 
   3.7832537238830023`*^9}, {3.78325376811418*^9, 3.783253787746668*^9}, {
   3.783253819352375*^9, 3.783253905965066*^9}, {3.7832539760069723`*^9, 
   3.783253976847007*^9}, {3.783254320198065*^9, 3.783254365227167*^9}, {
   3.7832544299684563`*^9, 3.78325446240738*^9}, {3.783254506943943*^9, 
   3.783254508229735*^9}, {3.783254721209738*^9, 3.7832547311599903`*^9}, {
   3.783255792209737*^9, 3.783255846291185*^9}, {3.783256585785912*^9, 
   3.7832565869188557`*^9}, {3.783256799517537*^9, 3.783256805251155*^9}, {
   3.7832637005128937`*^9, 3.7832637221552563`*^9}, {3.783263846297409*^9, 
   3.783263848406238*^9}, {3.7832639061011457`*^9, 3.783263913609727*^9}, {
   3.783264096673134*^9, 3.7832640980542383`*^9}, {3.783264185041394*^9, 
   3.783264203502563*^9}, {3.783264260867702*^9, 3.783264342824048*^9}, {
   3.783264384014936*^9, 3.783264391811571*^9}, 3.78326454019*^9, {
   3.7832647834344063`*^9, 3.783264790207617*^9}, {3.783264912940681*^9, 
   3.7832649130345087`*^9}, {3.7832649537956457`*^9, 3.783264985720553*^9}, {
   3.7832658637321997`*^9, 3.783265990485881*^9}, 3.783266034492182*^9, {
   3.783266091683144*^9, 3.783266096518672*^9}, {3.783774768123637*^9, 
   3.783774783345443*^9}, 3.783774839463625*^9, {3.783774922349283*^9, 
   3.7837749448082523`*^9}, {3.783775151200815*^9, 3.7837751527362957`*^9}, {
   3.783775210823413*^9, 3.783775301762349*^9}, {3.7837754027966127`*^9, 
   3.783775414314205*^9}, {3.7837755651260223`*^9, 3.783775580709586*^9}, {
   3.783776176486699*^9, 3.78377640888796*^9}, {3.783855048420854*^9, 
   3.78385509766527*^9}, {3.7838551696343927`*^9, 3.783855202564169*^9}, {
   3.783855242991747*^9, 3.783855263683135*^9}, {3.783855675551834*^9, 
   3.783855743541339*^9}, {3.78385577670542*^9, 3.7838558273944273`*^9}, {
   3.783855876965213*^9, 3.783855968071261*^9}, {3.78431415157918*^9, 
   3.784314163553708*^9}, {3.78431419884095*^9, 3.78431430267424*^9}, {
   3.784314550581262*^9, 3.7843145581082077`*^9}, {3.784314607999522*^9, 
   3.784314608141528*^9}, {3.78431487212212*^9, 3.7843148730565147`*^9}, {
   3.784315033929461*^9, 3.7843150486557407`*^9}, {3.784315429848564*^9, 
   3.784315443851542*^9}, {3.784315474878488*^9, 3.784315505988428*^9}, 
   3.78431560486119*^9, {3.784315766999742*^9, 3.784315768285954*^9}, {
   3.784315807119954*^9, 3.7843158315494843`*^9}, 3.7843158859331512`*^9, {
   3.784316102529747*^9, 3.784316144134597*^9}, {3.7843162054271812`*^9, 
   3.7843162218481894`*^9}, {3.784316256777678*^9, 3.784316257383531*^9}, {
   3.784316295818739*^9, 3.78431633705217*^9}, {3.7843283776511993`*^9, 
   3.784328410167642*^9}, {3.784329050534635*^9, 3.784329062799383*^9}, {
   3.784329896100482*^9, 3.784329897817925*^9}, {3.784329930448193*^9, 
   3.78433006677246*^9}, {3.7843328158466063`*^9, 3.784332825120412*^9}, {
   3.784332864934772*^9, 3.784332867807169*^9}, {3.7843329083114843`*^9, 
   3.7843329454207373`*^9}, {3.784389821158742*^9, 3.7843898386327343`*^9}, {
   3.784389893633338*^9, 3.784389895240507*^9}, {3.784389985065145*^9, 
   3.7843899873212643`*^9}, {3.784390021615048*^9, 3.7843900220061493`*^9}, {
   3.784390067003251*^9, 3.784390067201129*^9}, {3.784391218469459*^9, 
   3.784391218667144*^9}, {3.784391702967483*^9, 3.784391710510241*^9}, {
   3.784392411563012*^9, 3.78439241417984*^9}, {3.78439250079142*^9, 
   3.7843925040535803`*^9}, {3.784392577163982*^9, 3.78439257736935*^9}, {
   3.7843930213152447`*^9, 3.7843930366374826`*^9}, {3.784393090050548*^9, 
   3.7843930924161577`*^9}, {3.784399826155219*^9, 3.784399829616685*^9}, {
   3.7844151972773247`*^9, 3.7844152074057617`*^9}, {3.784415264946916*^9, 
   3.7844153083791227`*^9}, 3.784415408995927*^9, {3.7844157477782516`*^9, 
   3.784415750279622*^9}, 3.7844189118812847`*^9, {3.784421666259013*^9, 
   3.7844216686232147`*^9}, {3.784421967631267*^9, 3.784421968674752*^9}, {
   3.7844220048212852`*^9, 3.7844220050254173`*^9}, {3.784427634221537*^9, 
   3.784427634905411*^9}, {3.7844280483520184`*^9, 3.784428055809407*^9}, {
   3.784461083501397*^9, 3.784461087675804*^9}, {3.784465964872037*^9, 
   3.784465966038102*^9}, {3.784466030678183*^9, 3.78446603093221*^9}, {
   3.7844748256318617`*^9, 3.784474833509602*^9}, 3.7849444444059887`*^9, {
   3.784944496414609*^9, 3.7849445819232187`*^9}, {3.7849447220392857`*^9, 
   3.784944726492586*^9}, {3.784944983595809*^9, 3.784945029628578*^9}, {
   3.784945078875966*^9, 3.784945098354617*^9}, {3.784945179343122*^9, 
   3.784945182349503*^9}, {3.784945227080574*^9, 3.784945230302109*^9}, {
   3.784945660703788*^9, 3.784945665172449*^9}, {3.7849457022175198`*^9, 
   3.7849457082056303`*^9}, {3.7849458462475777`*^9, 
   3.7849458973001137`*^9}, {3.784946318758711*^9, 3.7849463322122393`*^9}, {
   3.784986599949856*^9, 3.784986668700054*^9}, {3.784986702949299*^9, 
   3.784986703242749*^9}, {3.784986736659707*^9, 3.7849867464959593`*^9}, {
   3.784986809839266*^9, 3.7849868114130983`*^9}, {3.784986850778075*^9, 
   3.784986855391807*^9}, {3.784986892666829*^9, 3.7849869189574614`*^9}, {
   3.7849869558120623`*^9, 3.78498695701903*^9}, {3.784986999117032*^9, 
   3.784987013729175*^9}, {3.7849870548416986`*^9, 3.784987061899832*^9}, {
   3.785023565727943*^9, 3.7850235663425093`*^9}, {3.785023780379912*^9, 
   3.7850237826448793`*^9}, {3.785023819311202*^9, 3.78502382954956*^9}, {
   3.785023942746863*^9, 3.785023950752434*^9}, {3.785024069197616*^9, 
   3.7850241549371443`*^9}, {3.7850242870780067`*^9, 3.785024332370493*^9}, {
   3.785024771597186*^9, 3.785024806465639*^9}, {3.785025203143087*^9, 
   3.785025246355176*^9}, {3.78502530141227*^9, 3.785025525664143*^9}, {
   3.785025555915753*^9, 3.785025622245244*^9}, {3.785032549156166*^9, 
   3.785032571998715*^9}, {3.785032682230205*^9, 3.785032722870891*^9}, {
   3.7850327903823137`*^9, 3.7850328516333933`*^9}, {3.7850332697884893`*^9, 
   3.7850332824397*^9}, {3.785033316991947*^9, 3.785033345044187*^9}, {
   3.7850333847106256`*^9, 3.7850333993417873`*^9}, {3.785033448962496*^9, 
   3.785033494552577*^9}, {3.785033702932682*^9, 3.78503380312879*^9}, {
   3.785033840131977*^9, 3.785033844698995*^9}, {3.785033904332123*^9, 
   3.785033925822219*^9}, {3.785034444800749*^9, 3.785034478276195*^9}, {
   3.7850345268140373`*^9, 3.785034586230094*^9}, {3.785036122460128*^9, 
   3.785036125257267*^9}, {3.7850361809902678`*^9, 3.785036306786834*^9}, {
   3.7850363418160152`*^9, 3.785036392788059*^9}, {3.785036444635934*^9, 
   3.785036448784665*^9}, {3.785036501969389*^9, 3.7850365462146893`*^9}, {
   3.785036579982559*^9, 3.7850366602077007`*^9}, {3.785037975292594*^9, 
   3.78503798979573*^9}, {3.785038029076087*^9, 3.78503802990412*^9}, {
   3.785067048768941*^9, 3.785067167908749*^9}, {3.785067774581592*^9, 
   3.785067818970014*^9}, 3.785067882788556*^9, {3.785068719493478*^9, 
   3.785068784517125*^9}, {3.785068817291624*^9, 3.7850689193283587`*^9}, {
   3.785069028565259*^9, 3.785069100660963*^9}, {3.785069190150784*^9, 
   3.785069231929489*^9}, {3.78506936038482*^9, 3.785069523610776*^9}, {
   3.7850696153035603`*^9, 3.7850696324862423`*^9}, {3.785071343325101*^9, 
   3.7850713472516327`*^9}, {3.7850713973458853`*^9, 3.78507139885705*^9}, {
   3.785071581621985*^9, 3.785071582795796*^9}, {3.785072931236473*^9, 
   3.785072939322317*^9}, {3.7850729832502613`*^9, 3.785072985528418*^9}, {
   3.785077131318965*^9, 3.785077136484057*^9}, {3.785080226290255*^9, 
   3.78508023615035*^9}, {3.785081282300809*^9, 3.785081289011196*^9}, {
   3.7850835329126387`*^9, 3.7850835360716467`*^9}, {3.7850835745057917`*^9, 
   3.785083599836034*^9}, {3.785083661103483*^9, 3.7850836615244083`*^9}, {
   3.785083699849614*^9, 3.785083704863709*^9}, {3.785083827026073*^9, 
   3.7850838275270557`*^9}, {3.7850854277453203`*^9, 
   3.7850854497511663`*^9}, {3.78508548690022*^9, 3.785085512993147*^9}, 
   3.785085702575487*^9, {3.7850858240846233`*^9, 3.785085834470059*^9}, 
   3.785549264211028*^9, {3.785549652680543*^9, 3.7855496593364887`*^9}, {
   3.78555016072195*^9, 3.785550168753667*^9}, {3.785550225005205*^9, 
   3.7855502351201572`*^9}, {3.785550411717802*^9, 3.785550434588141*^9}, {
   3.7855507056573277`*^9, 3.785550761100996*^9}, {3.785550801957006*^9, 
   3.7855508391621532`*^9}, {3.7855509066413307`*^9, 3.785550942928999*^9}, {
   3.785550981379085*^9, 3.785550991256537*^9}, {3.785588191490171*^9, 
   3.785588225038403*^9}, {3.7855882593034563`*^9, 3.78558826237425*^9}, {
   3.785588298855981*^9, 3.7855883708357477`*^9}, {3.78558843182788*^9, 
   3.7855884638080597`*^9}, {3.785588838571145*^9, 3.785588877009859*^9}, {
   3.7855889607130327`*^9, 3.785589225088979*^9}, {3.785589669839905*^9, 
   3.7855897005128813`*^9}, {3.785589735293393*^9, 3.785589749466394*^9}, {
   3.7855898092515783`*^9, 3.7855898627099752`*^9}, {3.785589942372671*^9, 
   3.7855899861948547`*^9}, {3.785590602465228*^9, 3.785590631700938*^9}, {
   3.785590895695016*^9, 3.785590955686924*^9}, {3.785590987903823*^9, 
   3.785591040564625*^9}, {3.785591100774908*^9, 3.78559117980229*^9}, {
   3.785591553876731*^9, 3.785591580057683*^9}, {3.7855922761255817`*^9, 
   3.7855923542825413`*^9}, {3.785592402197423*^9, 3.78559241143541*^9}, {
   3.7855924844199333`*^9, 3.7855924972010403`*^9}, {3.7855925306071053`*^9, 
   3.7855926903116083`*^9}, {3.785592731780108*^9, 3.785592737345001*^9}, {
   3.7855928166759167`*^9, 3.78559284707121*^9}, {3.785592877425048*^9, 
   3.785592883709584*^9}, {3.785593089994582*^9, 3.785593535637384*^9}, {
   3.785593566823251*^9, 3.785593670967972*^9}, {3.785593927889791*^9, 
   3.785593936855958*^9}, {3.7855939698404493`*^9, 3.785593982980666*^9}, {
   3.785594131054679*^9, 3.7855941357708178`*^9}, {3.785594165941452*^9, 
   3.785594194193117*^9}, {3.785594412950395*^9, 3.7855944134587107`*^9}, {
   3.785602675656378*^9, 3.785602709562716*^9}, {3.785602761758235*^9, 
   3.785602792278997*^9}, {3.785602914147675*^9, 3.785602918722165*^9}, {
   3.785603000175153*^9, 3.78560302865244*^9}, {3.785603193352594*^9, 
   3.785603198539312*^9}, {3.7856032287593937`*^9, 3.7856032600821133`*^9}, {
   3.785603350426285*^9, 3.785603404340981*^9}, {3.7856034669015923`*^9, 
   3.785603484343527*^9}, {3.785604139928421*^9, 3.785604152565127*^9}, {
   3.785604298716681*^9, 3.785604307736528*^9}, {3.785604549589869*^9, 
   3.785604613007482*^9}, {3.785604676333727*^9, 3.785604685931506*^9}, {
   3.785605060519017*^9, 3.785605064939617*^9}, {3.785605321565728*^9, 
   3.78560532196243*^9}, {3.785605357031053*^9, 3.785605494522447*^9}, {
   3.785605706133401*^9, 3.785605756587884*^9}, {3.785606000674815*^9, 
   3.785606095980719*^9}, {3.7856067887964697`*^9, 3.7856068292307053`*^9}, {
   3.785606978615198*^9, 3.785606994178108*^9}, {3.785607038848284*^9, 
   3.7856070460400753`*^9}, {3.785607107358573*^9, 3.7856071099110394`*^9}, {
   3.7856071644645977`*^9, 3.785607364079954*^9}, {3.785607431423252*^9, 
   3.785607436221692*^9}, {3.7856075022242403`*^9, 3.785607579166556*^9}, {
   3.7856089741583233`*^9, 3.785608981271903*^9}, 3.785641276688406*^9},
 CellLabel->
  "(Debug) In[25]:=",ExpressionUUID->"fe9a94a2-4624-4b68-828c-3dbcfd3a2def"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Omega]1", "=", "0.3"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]2", "=", 
     RowBox[{"0.3", " ", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]3", "=", 
     RowBox[{"0.3", "*", "3"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Omega]4", "=", "0.01"}], ";", "\[IndentingNewLine]", 
    RowBox[{"A1", "=", 
     RowBox[{
      RowBox[{"1", "/", "10"}], " ", "4"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"A2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "10"}], " ", "0"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"A3", "=", 
     RowBox[{
      RowBox[{"1", "/", "15"}], " ", "0"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"B1", "=", "0.5"}], ";", "\[IndentingNewLine]", 
    RowBox[{"B2", "=", "0.8"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"can", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", " ", "[", 
    RowBox[{
     RowBox[{"i", "=", "0"}], ",", 
     RowBox[{"i", "<", "1000"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Omega]1", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.4"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]2", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "1"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]3", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"\[Omega]2", ",", "2"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]4", "=", 
       RowBox[{"\[Omega]1", "/", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"10", ",", "30"}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A1", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A2", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A3", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"B1", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"B2", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sol1", "=", 
       RowBox[{"roller", "[", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3", ",", "\[Omega]4", 
          ",", "A1", ",", "A2", ",", "A3", ",", "B1", ",", " ", "B2"}], "}"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol2", "=", 
       RowBox[{"rollerflat", "[", 
        RowBox[{"{", 
         RowBox[{
         "\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3", ",", "\[Omega]4", 
          ",", "A1", ",", "A2", ",", "A3", ",", "B1", ",", " ", "B2"}], "}"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bias", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], "/.", 
          RowBox[{"sol1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1", ",", "5000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"flat", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], "/.", 
          RowBox[{"sol2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1", ",", "5000"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", "flat", "]"}], "-", 
            RowBox[{"Min", "[", "bias", "]"}]}], ">", "2"}], ")"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{"Min", "[", "bias", "]"}], 
             RowBox[{
              RowBox[{
               RowBox[{"y", "[", "t", "]"}], "/.", 
               RowBox[{"sol1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
              RowBox[{"t", "\[Rule]", 
               RowBox[{
                RowBox[{"Ordering", "[", 
                 RowBox[{"bias", ",", "1"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}]], "]"}], ">", "1"}], 
          ")"}]}], ",", " ", 
        RowBox[{"can", " ", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"can", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3", ",", "\[Omega]4",
              ",", "A1", ",", "A2", ",", "A3", ",", "B1", ",", " ", "B2"}], 
            "}"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0n0s1HEABvDjIjWTpJsKXf1hV45RSAndSS7GLmvnbbhu3sr7eQllWTkJ
NS9n68UkiuqGDXe7ZYbLW1hhik1Ykh0j3MlMJ/2e7x/PPnv+ffacECUHRuvT
aDR3KnA4QmWS7LTMeZt8xRQqDHtioe1ZmRguusZkQeF8aDbkB/mUwfderpXQ
ac7tBVRVODfArqbYJvjB3l0JLX44j0Of0khiAuuAZwql0byaB6X+5/1hX5hU
QLpTZSgsiOPHQJvtqVuk2xWmwKj+nTyoSnC5DxfSOGWQWxBeDjenRc6plAPT
MjdYGqH0hTn13SFwsDLuC5xZ7SVuLK5swalCwV+osB/cJ6b0CHpsBsWsSAYc
zayxhH3jW/HQ5mpbHjTSM5fCnjpuDbQePtIM7xjUdcNvNosTmZTlHUtE3nrW
KhyY26OBtdXXtmC9VkR8Ei/Ru01ZwpjdC4P4z4zhZkAVcYa+ehBue2uIYgnr
GDzJbmfCslSOPSz6E0KURgovw+qZRmKbOTsBjvH234W/42qHoWXx+lfYrpRp
4Yp2jVj17802DG2+uAPvSdW2WZRWzCQ28ZOLIzTjHPeBbbtFfMiU+QmhycjN
KMjofkkUmW4czaZ0WPjIhJfsTP1gceKQP9QlllyHdcFdxBGdOh3yZOkZsCPX
qw0yVGHEVt3uBDRSMyeh50/vlnzKcfloPwycLP4MT3UaLMGep4fpEvxx0oIo
aW1xghpF2jkoYDpL4Dg7h5if4aqB3Bi6FiYLWPoFlMbRAjoMED4wg9aOFYcg
zdZKDs9k6pRQVNgw8xA7O4TPQm5R3y9YUjtEXE5qqH1EaXhj7DX0jXqngBcs
5MTg0ztrcKQxdx3Ot+/WPKfsXaC/gt87PeqhWM4j/gcrPNuN
  "],
 CellLabel->
  "(Debug) In[32]:=",ExpressionUUID->"4bf5c7a0-491c-4d7a-b48a-f0f9cef712d0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7856317938062897`*^9, 
  3.7856317957600403`*^9}},ExpressionUUID->"0d987a4a-bc93-4c3b-86fc-\
c5db85dc6e0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tan", "[", 
   RowBox[{"45", " ", "Degree"}], "]"}], " ", "1.0"}]], "Input",
 CellChangeTimes->{{3.785676045017766*^9, 3.7856760781189003`*^9}},
 CellLabel->
  "(Debug) In[31]:=",ExpressionUUID->"62d146c0-c44b-4922-9e47-07bc92d9f0a3"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.7856760550162888`*^9, 3.785676079189189*^9}},
 CellLabel->
  "(Debug) Out[31]=",ExpressionUUID->"0aa210c6-0de5-48c6-af4d-5ff9ed402d8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "can", "]"}]], "Input",
 CellChangeTimes->{{3.7856327876545343`*^9, 3.785632787902041*^9}, {
  3.7856334989300537`*^9, 3.785633501912321*^9}, {3.785635006127821*^9, 
  3.7856350101794786`*^9}},
 CellLabel->
  "(Debug) In[244]:=",ExpressionUUID->"64ce093f-f6f5-4cbc-ba37-a9e44f705a14"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{
  3.785632788332543*^9, 3.785633502372168*^9, {3.785634556042459*^9, 
   3.785634560277937*^9}, 3.78563501038662*^9, 3.7856359466353903`*^9, 
   3.7856374135482073`*^9, 3.785639114059965*^9, {3.7856412465106707`*^9, 
   3.785641287553253*^9}, 3.785641394626536*^9, 3.785641555704371*^9, 
   3.785671877582444*^9},
 CellLabel->
  "(Debug) Out[244]=",ExpressionUUID->"8e719aef-0374-49b3-877d-271640ab22d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7856321390880957`*^9},ExpressionUUID->"051b4c6d-465e-4fc1-849b-\
b261aa236ca9"],

Cell[BoxData["12.848059335621556`"], "Output",
 CellChangeTimes->{3.78563212424998*^9},
 CellLabel->
  "(Debug) Out[117]=",ExpressionUUID->"fe7f037c-2af6-4c58-9bf3-314e179cedf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "flat", "]"}]], "Input",
 CellChangeTimes->{{3.7856319796890583`*^9, 3.78563201346313*^9}},
 CellLabel->
  "(Debug) In[96]:=",ExpressionUUID->"1cc5a8ec-08ee-418f-8935-5d5790424a73"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
m7MbjvKt01aVpv5jjhve/N654fZ54T/OckM3/1mmX0fK/nGpG+zrFsYW/N71
j+vckGhiJ8p/uecfK21GzsQ9FkYH9v5j7c14/dLyeUtDJs2/GQdSu+d/WCyh
+TfjjU7g2Fn1STT/ZhTqto5YluJN82+GT/CL9ML0HWT/ZoQUNhw5syWO7N+M
ZznrJq9eIyD7t2Be0tZ+WZ/lZP8WDDvS9f5zl33k/y2IsUnc4XaO6mPnLZgh
5+31nkP1M2cLTsSLc8bGUj2etQW9z/+88uob1YulW9CpcnnW+5Pnaf4tuP5i
tWPzRIqvkjt+/6e5u3UNi787HkXom62fU07zu2Pv2ZDI4M+UL87ucJp23aEH
l/KJ446OIXExzT0p37LcsdlJ5ZdFNuVjqTv2V/deIrWifK1zx263ktjLPSif
lbaif94+zdYrlO/aW5HzyDzw0FHSA7aiSzpvo3zDPZp/K0xDz5xc20LM2Yrg
qAFL9q0hPWVthVn5neYNe4lLt2JGwsKjl28T121FL8++V5JeM/15IN+ux7K8
D8TaHhAED5Y9byaGB/bVLY/a/oDY2QNNV8Mq2nKJOR4w9TyV392Kze8By60u
qZmVdH+lHnhRJc/FWOI6D5TF3h7wJIzsU9oGPau+Y/POMvu3YY5Kb5vxyeQf
bMO70vEz412o3nbehu6BGTtcJzP9b4Ph9SD/l2+Z/rdB6Y1djyURTP/bsFrt
XcXKl0z/25D53n1yzQ+mf0+caaup+HvmCs3viUeL3/Mfq9DzAjxxI+5aA+cx
5Y+zJ4ZVXvn+ddZpmt8T64+HGPilUT5meSL0ZvHZudcpf0s9YSGeZf7sZCrN
r2CVU6uDfpO+lbZDKMleJy8j/Wpvx7F1s95cidhH+tuOhPXb7s+9n0f6247H
a1Ovze1ZQPrbjobjq8OSy06R/rbji76xbtW+ItL/dtS0PN0vPXue9L8dg44q
vd7YvZTm34ET9lNW/F5aRvPvwBkHvZk795TT/DsgiOvSMqa1gubfgSYN9fB7
I67T/Dtg0vfPjnmjbtL8O/Bn4uzgkKZbNP8OvHm/QPO2+x2afweCH7wcnXLy
Ls2/E62DfXNHbKmi+XdigWp7xe8GYuxE/7M9dphY36P5d0J99s/99wuIOTux
qbdhyqZu92n+nZh9y+di91XEpTuxonHYzDNC4rqduOKUb3mukljJCxINp22N
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
Wyrmm2o0Z7wqsTUHWmKPJZcqyL92HJzcOX9SaBT7feHgi3/ICaUpxO4chFiW
WYyvYb+3HChlj80ftoM4iIMyu6C3P79QfDkcROdci8jZRpzAgfqdhfamTyhf
eByYKQWED59HLOPgg+k8809HWH5y0Fjl8iFvGHEeB33euzQdFTG9clDfeLRp
oiZxMQfTj0zfOHAJ6alU4f+ShdwbXrSeVXLwLdDn7vtMWu+qOOgwHDd3cAWt
hzUcXJXGt6i+ovWyjoOPTeN/DnhL62kzB0PenO819Ratt20crAhUiRgWRetx
BwdWlndtKruy/bco3N9/Q/XXRqpv1aLws1/loPGlVI9qRCG6/cJ4ryVUD2hG
4WLAgIy3Q6j+1I7C1zcjDd7oU/2gGwU+x+7q5RdUXxhFYWTHgb6jDlD9aRqF
+FF7ep0TUf0JxfXN7/YxlVN9YhmFSTVGD40OUD1qHYW6q1bdnI5TPWMXhUfH
J22LPUT1jnMUAkaYVHHTqT51j8J+o439Db2oPvKKwnvD0f16RVD9FBSFkiUN
US2/qV7lKO5H2cPyjSqNJ0Thc3aIj+1mYl4UooonSdrqiWVRWLE7e02RPV0/
Kwqve2+dXnuTOC8KsywvZ2ospPspiMInpe8uPx8RF0fBsDCh+JSI7r80Chrf
cmzf88m+yiis2WudVlZP9ldFgefWonePT/6qicKU+fEzmvaQf+uioP22Lprn
R/5vjoL9J8PdPXZTfNqiUGBq7KNbQPHriIJLF91+b7IpvkrRmLuxYLxzENV3
atGIdhlxrIsZex6KhnTGn1F1P4k1o/G6b/rQE+VU/2lHw/XTqM1+eyifdKMx
rIk/Ykki5ZtRNJanD/zaN4zy0TQa4gmRm7S3UL4iGgvvXvfHTMpny2hsjvxy
c807YutoOOzTFt3wpfy3i8bU52uvxj0hdo5Gs8p/L/+3f+seDes6H7eba4i9
otF/84T7x0OJg6IR0L/K10DO9nej0fDSoWvMMeKEaBz8On/w55PEvGiolt6x
7SchlkVj27LtfZVXsP3GaChHb9EQNtP95EXj1jIrje7+xAXR4NopCY//IXuK
o1E37W36hTji0mhI/Hdr1KsTVyr8ueKyx7YY8k9VNFLUhmrP/ED+q4nG4Wlv
PNcvIK6LRu67aQkqEeTv5mjMDL5wdSmP4tEWjXb38889tlO8OqKRHPzk2ooe
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
rJ0M7peFBSOaiXWTcTZdZ8e7Qaz/m4zW24POPFzE+r/J6Kh2424JZP3fZKh2
sfIMZP1hy2REdvHTjnjA+r/JyLxq8829K/nLLhnfvA/OLWL+c06Gd2z3psl+
xO7JyBiz/1LeRWKvZJzL9278OoLiFZSMPJPNNtMyWfyTMSoV68NNKD8SFNfv
snqGRzUxLxl63n8EJc6UX7JkFL5fW291izgrGerFwl5zh1F+5iVjqcbLIgtb
4oJk1O8tWmCVQFycjLclHyaGnCIuTcaBzhr3ObXElckI/94aL1ZtpfgnY8y2
D7dPGRPXJKPP0Y1XX20mrkvGtZJtI5FD3JyM4z5fvv2uJ25LRtiYrk8+DXhP
8U/GsaaTa1ZNIlZKwacPhebxRsRqKVAN2dv5R5tYIwUBLrde6akTa6YgLual
Zsp7ur52Cl7VNfDW3CXWTUGWw2Y9jWPERinYn/vJ/kUCsWkKvFaXy3s6ESMF
f37ErP85idgyBfdWy4L8O5n+U6BUr76s7TzTfwr6Zcu7l3oRO6cg2nBH8vWB
xO4pKH71oUf8YYqPl8K+XdOd9kwmDkpBx5SfXx4dp/hyUnD4cf+5mRNY/FNw
1WfwjeYDTP8pmDLdu8cuXab/FDjaRF1pP0H5lZWCzxeUVRfNZ/pPgV7HsPl/
nrL9mhTUnL7c2j+AuDgFS7y8Vu9i+0OlKVDvOlVHg+mrMgW5U9etXzGZ7eem
YMA7zqrofFrfalIw/r+h3Ny+bH8zBZsG297Z7UDrYXMKBH/PPuKks/2uFGww
XIWSM7S+dqSgew8b7Z5v2PsXqRjVW+tQkTGxWipulq+Sq4LtB6aiRNX71mYb
2p/QTMWcqc/G/eBRPaCdipiCg+f2NVG9oJuK++nhkwdbEBulQuuD7kFxHtW/
pqng5G7q9bkre18nFdvVC5w3WlH9YZmKy5ObV0yIoPrXOhXl47emXExj9X8q
LnTZJdmUQvWucyq6rva4tGA31TfuqTjc20X3+3uqf7xS0ae3/M2HROKgVLzb
2rv/DXv2flMq1gXUvXaZR5yQChXdXpztU4l5qZjQaaBfOYlYlgqfZ/qHe5uw
9z1S8eBsRMymRcR5qZhm4HjB04u4IBXWOY+1vIuIi1MhvChpCB3H3sdKxZeQ
ATzfa8SVqVhS3ZjSnkn2VaWi32vRIZmM1f+pqHZ9/PpVJuv/puLjz8Bx/DS2
/5OKZvuMv+NdyL9tqXg4QflA7DCKR0cqJMFW9a1sP0kpDfrPojDQl+KplobO
+PfndhpSvDXSEKg8zmn4Xxb/NCxf/2FtxltW/6WhKOLbeiMfVv+l4W6tUqDZ
R1b/pYFfoNt3swvln2kagkvkQ8rKWf2Xht8zTerq+1O+WqbBprJh9tqVrP5L
Q5q99qt+UcR2aXhXcm/H54PEzmmo7bYj5fgNYvc0jF2TcuppK7FXGlZOs9r2
uzfpIygNT/pJHmgbsP2/NPwcKZ16dSbb/0uDReSg0PFTiXmKvzdY9+Ieqz9l
aajffKpL2R+6flYaei7LfzeO7RfmpSE28InN12PEBQr/mXcuDYskLk7Djrba
dRsWs/3rNNzWn7GuhL1/WZmG9e5xFV/YeYKqNFzugeetW4hr0jDj54jDVqye
rktD4SDBuVZP4mbF9VOqy6aFsf3+NIR9qKtvfkfx7UjD3mq1PpqrWPzT0TPv
7avuz1j9n47gmk7XFjHll0Y6Koy6eAeGU/5ppmNO0IDY5TGUn9rpuKo/pmiG
jPJXNx3G44df0jjOnv/T8cxmyPBsdj7OVDGfzYazpWfoeQXp8FjKzSkW0vOM
ZTq03yj1DF9Kzz/W6fi99d3oujP0/GSXjiPDusU5S+j5yzkd1bVfJrWuo/6G
u+L+cox7X5jC9v/S0c3+0niLRdQfCUrHsj2XgxbnUf+Ek46F/KFiCTt/lpCO
4fmeNdfT6DwXLx2O/TYUTH1I+wuydOwebrl4MHufPSsde99OKQ0Bvf+Ul45k
FZdDjt+on1qQjrNN040D9+2l+Kfjfm/nsOFRQop/OqKyInrbPaf32SvTsS1Z
b6XWYJ85/+Kfjiw9i1LVrdTPrElHflvgHafv7H2mdJSveJa1YT2dN21OR2b0
m59eXaif1ZYOLYv1qQMKjvzjjnQ8/vni7bNt1O9W4qG+0/Cz/izqd6rwcO5c
o0uYOvXH1HiYuXbrUuFR4p48yOfOvzxyNO13aPBw0+HToW0OxAN42NSRov6S
nQfX5KFoPUfD8yf9vRYP19eJWiPZeXRtHtq2qclV+9H8Ojwc7ueaq22f/491
efhP43yHQ+6Bf2zAw+KId0hM3f2PjXjoMPdeePk/el/fhIe4GfxBgweEUr7x
YJ693eiVmvgfm/FQbH5/oTiR4gEeXh97q722nPp1C3ioGrjk4djJdN7WkoeG
QWcHT004/I+X8TD6osGJbUNpf8mahy3dbbUq+1A+2PDQa9ejp6Yb6TyuHQ9l
yWU6/frQeUEHHuZNemdr3Y/tXynsM5ccvziT8s+Vh0/nP73YPpHOC7rzsHT+
w5gZtyhfPRXsUTd85jF2npIHo7K5TzcsofODfjzYP3N7OaWIOIiHpminU127
U/6HKca79HdTnU/M4aHwz5aHJ7YRc3lotRQGp4USJ/CgMmbiNngSp/DgZp/3
rdKMmMfDvfUj7zV8oflEPCBmqnDQLmKZwh+zMp7ITIkzeTB5Iz2y+Q7dfxYP
Lcpncno5EOcq7M/5OOfnC7I3j4eed25FvbImzueh2nzOHfsl5J8CRf6sqI1s
SKH+aCEPwd5xC15PpPeVinlYeLRolkSJ9FzCg3HyvrhbQ0nPpTxo14UUzVYp
+MflPDxdMPbamUt5pEcepk84fNq8nfZTbvHQ+6FJvGav3fT7zINmn0WmzaNp
f6OaB4tofYm3J+1v1PDwZviGiOlnaT+nlgeP0x8XzRsUQr/fivh/alBrOGz7
jxt5+NZpduy0Ib1P2MxDReaMeXNaKL9beai8WLzXLlVE+ubh9m2dP/L51K9u
5yG+fkCGZSvtV3Uorh9dePGPMu1n/eJhzKScy8dc6PdAiY9kvScfW5aQ3lT4
KLCyXKxiRqzGx8sTvQ/+ktC/78nH1x1rx+kkHyb987Gn1W6N1Vi6/gA+qkY3
XczceJD0z0f7wRHiLdNo/1SLD97s5nWXJNmkfz6K7waPWPyM3sfU4WOQWb3G
fiMp6Z+P3Jp7ifnHkkn/fLzr+nrpg12upH/F9XY3lQVrxf7znwkf38aYHXk/
id6nNOVjxgaJqvlG2r8yU9xf1arIkXb0ew0++lU8Xv1kBL0/uYCPIz+HWZ7/
Qv14Sz5+Po4O7ZpNel3Gh6NJ36UthpRv1nxcHPh5yLDVlJ82fBy309MapkH5
bseHxGSlWdxT0osDH2c9rKZ/KGXvU/JRwe948b2azoe48rFf/izpqj71G935
uBk2slj/Ga13nnzE70y9Ma2N1kMvPl5/+HDmxTFaL/34iucLvblPAmh9DeLj
WMjoAxbjaT0OU/iv6MKNZVns/XyFv/XGK8mf0nrO5YOT9ybVvJ7W+wQ+GuLe
O08qp3oghQ+l4/X9LfhUL/D4SPz4uPv+1VRvivjopT/k5fSBVF/I+BA6vnQa
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
ulLEcpM+fZtH9htI8bevsmv7cfKPkRTj58yKnzeV/GcixeLr46OlpeRfUylW
vz+Xk2NB8TCTYlCvom9rrlD8IMUEm95fQ0wp/gukUJpu3GtcPjuPLMWv8oLw
ZeMpf5ZJEZp+e/DGdZRf1lJs6FyxztuI8s9Gikn1r3d/1qJ8tZNixUi70h66
lO8OUmTvLSvTW8e+D6O4n/Uq6ZPOUn/eVeGf0h/rfsyj9c5dCp05vZUC3lA/
0VPhbydO9qxEdr5dMT77QEeBOq2nflJ4mOXM3WrH3neUoqB88FrVQFp/w6To
aTvoioM3+z6yFNMO55iGTaD1myvFyCFJmtUS4gQpcl7kPG5h3ydIkeK1/fJ5
Xf3Y+/pSjLvQduLrR2KRFLK7C77/F87el5ZiwG/u5qcjWf0vBXfQquRTD4mz
pNC3tdEbkUb1S67C38sCQocbUb2TJ4Vg+Kr5U44R50vRC/FGa3ux81WK+6/+
eMiKPd8UStE/p7ggnJ3vLZbiQ5fHLUtvEpdI4dLco/3Dd3b+SorfU4p+pWlR
/VYuRdddi1QPmRJXShEyXniv21LiW1LUeB22TGT1YZUU52wTX49dTFytGA9e
dNZsEnGNFLXJ220MVIlrpfi6QMlu3n12flOKW7vNq/X3EjdKcUnt0uepXsTN
UgTLG2b4LSBulcLM3szm6WD2PQ8p/AynDZ3eRP5pl+JZQukb74PsvKciPjq7
PPevI/4lhb1D7Lei3+RvJRnWrBqmMVFErCJD2aZfvnbjiNVkSNl0r6njAqv/
Zbgz2/96/Eb2vQQZtqqUzIztRzxAhs6yPbzXdyj+mjKY3IlMv8/6y1oyBK58
tj/dnn1fQ4Zhlgf6Ko0g1pFBa1fKEItnlE+6Mlx4U1RjxZ5nDGQYUTL+a7sp
sZEMzs8azT2bKF9NZBCNuLeuNYedN5ehizQxsHsksZkMfZRVHl3zZd+vkMHw
Y9FRhyDiBTI84YQ8nsmeNy0V/qiqs5wuJV4mg/7kgr2vjrLvXcjgUT5hy+Ab
xDYyrM3/JUph33u2k2H/iWsj3dn3ARxkaPzFk6fZs++DyKDzaUTjhJPErjL0
lvTg6Buz80wyxJQrvb/9gthThg/WIqUTB8nfXjJUXzmXbbWd1f8ynCoeH6U8
hJ13lynqsRMfatn5wjAZVj/sutVzBDv/LoNbS5vm5CRirgwWLdNnl30hTpAh
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
n8zjcePrvDtrWujzhTz49/+av/k22//Lw5fxSc1ro8lKLn4i1s3/1ot8ioem
8pqXzgdYPmDu9y89vHDXd7r+HB5uz/Bcm7eSnMfD8wVVqyd/oPK8zJXP6KAT
Y7ez/Gs8hOVsko8wZO2fh1FnkoPKi1j752HRqF03vmwkl/CwTG/sFvf+LD8b
V39WZ3cMzKH6LedhxJjVAeZjWb42rr6fr9Dad4DioZqHvqbG565lULzU8NCr
Ve9MhYTiqZaH32t2/agVUrzVc+2hZNG13FKKx0Ye1n8KmWloT/7Cw+6DA0o/
P6X4/caDdfoXc/UJ8k8e7HSMV+QGk1t5WOgfzdvE1nPa8XHY26rXjolkTT5M
nvjfr7Ng+eD4+J7UPsfShKzDx3/73p6+bsDyQ/Khs0H7kll/sj4fY0cc+nXb
iOUL4WPg06+5m9n6jwGfe9765+ARTTbi4+HPqAWKarIJH7cPnJg90ovlk+Gj
NDTmk6yMbM7Hote5WO3NzpfxscSk2DuogmzLx67k673MFrJ8M3zURBdYOb4m
O/BxakknrTnr2f5fPvbtG2t0sxPVjzMf/PWzLh/KJrvyERPmwJsdSvXpzke7
0yscNdl5VU/u8+8nFfnPpPjx4SOlm/Bg5xCWr5CPHnLjN+ocilc/7veeNut4
szd7nxkfG6fe6nDMkcazQD5c8u/sTGTzh6u58tYw7H48gca/YD7WllQ3Gw9g
5xv5mNDWRZ2fQg7jA7+2dEE3tv7PR2L++RHXoshRfDyfoNv18Ud2/pErj+Ht
Kjv60/i8m4/YTiG3QqrI+/gIeRMx5B/Lx5zAx9y84enF2mz858MvbG7z5+vk
ZD7ueo6P25/A7v/58D4z2MeZ3S/yuM+PyH/r2ZnuV4R8LH9idO+/E2QpH2dj
f3XT6UT3O0o+Ri+o/Nl+OfkUH0rDEGUhy/+QxUfOtnUHJzSz/b981B3+8yTC
nJ23537PzRtvMv3Z/l8+guL8VwQnsP2/XH3367Nhdza5kI++WSfnhpex8/h8
CD88/yp/Qy7hI3TyOCvnWnIZHxfG7uqqW04u58Nh9b9d9RfIlXzcvFZr1y+F
XM3HkBnOoXUR5Bo+znSLupzH9ifX8pFgUX5p4DiWz4OP+tbT9sk65EY+qgK/
Pc55Qtf7hQ/tpof7eh0if+PjpNt+2elx5J98iL588N/xiMq3lY/0tGvbc1eS
2wkwxECj5Esr1Y+mANf6zfyNNHInAaZZn4mKm0rWEcB5xMnV076x/MACeGK9
6qOKrM99XlDNfrk/yxcswKdtoy5p6pENBCg+HJ9cf57lFxegf0Jvre0eZBMB
xixMr91dzfJJCFC3r0azcQ3ZXIDxPaPHGHdm+cgFCOwwJfLVdYpXWwGO8dOL
9dnz4ngBBuwe1N5kE9lBgPPS8GaDADIE+LOnYP66eWRnAWzG22+19CG7CjBy
0NTElb5kdwF2HM/q8Wkx2VOA6kUbDw0KJvsIcGfj224n2H74+QLkFXz+szGH
7CeAzs7r6zdpsfzFAqxw2v3pIMt/HsiVz59fyyN6UnmsFmC3R86dFhE5WAAL
3eWChMEsv4UAEn6+lV882/8nwJaU+8l/WT6SCAGeD9LafpjVX5QAPyZFyo+I
2P2/AMP1u0WXsva4W4C/u0fodtnFnv8F6JVV83mOPtv/K8D9o8LmJzfZ/l8B
zHeMmzD4KMVnsgCL9YPfmUfS81CKAA03/YIsVtH8BU+AYRPNtHe40HyHUIA5
ubvGTNZh838CjItY/usz28+pFODQXL2GFja/d0qAb1vM+gcFkbMEKDrYR3+e
is3/cfHjv6tHdD2b/xPg3en0BRdH0PzOZQEspxhP1F1Lvi6AsPMYj5tsfr5Q
AF6meczeFnKxAJqL3I9JJ9P8U4kAs6aNfWu8l1wmQG1ea//8UnK5ACZrpz3J
ZPPnlQIs18enIm9ytQCP74+c/S6BXMP9u1vZUrOr5FoBxPXH9qXWk+sFiI1a
fnGC7jdq/9z3r9CZn2hF/sK112/HxrbzJH8TwOd8+0zvYPJPASpzX5Z57iG3
CmC17/qEjmnkdulYnhM/SHyarJmO2drNoQOvkDulQ+z7LuxoMVknHSFXCo+f
vk/WS0d+hwAzHvt3/XTcKlq35kEuuV86IvTHNgjZ9xmkw+haqubRHWSjdJQH
9v5Qu5psko4zR2IyTeaTR6RD2ji/S6Eb2TwdE0uWj26cRLZKx3btnjabRpNt
03Hij3xv3iDy+HT4ec4sGaNNdkjHikRrfvsGKl+kg5e3fPnhm2Rn7u9DE00/
JZFd09FkZnTsgSfZPR3FPZo8FNpkz3TcnNqySOM61b9POpzCD5RM2UWen441
g++drfQm+6Wje/2LUN3R5KXpeHl3rPVDPXJgOkzGic/lfaf4W52OPfftayOr
yMHpMEw55HX/OnlDOgqH9LAaIyOHpWP961M6FfvIEeno1dZh85pgclQ6Do8y
2W3jRY5JR87NfE+tCeTdXP2HXrr+dBh5XzqsZh/6ntePnJCOHedWDo3oQU7i
vn9abr11d3IyV39PXwks2b+npMPrTcOI3X3JvHT0FrVzCRxKFqZjVIHBqP/s
yNJ02O3qdnGQD1mZjnNN0hNjIsmn0nHkicmycCk5Kx21D5IeVZWQc9Lx4kHb
gqlfyHnp8Ai+dbJRl8r3cjqMvYb0jBhFvs7F8+MT91OcyYXpKHDSNv2whFzM
1UfyNZkjm28vSUfu1aVvDNn8elk6Rq/dn/mjkLX/dNi3d16y5Re5Mh0f5McX
L7Nn7T8dI1aPN74Vw9p/Ok71y1dFX2PtPx3t+cWKJ59Y+0+H5Zsks1U6rP2n
Y0tUTIO9EWv/6fjx8HXMOwvW/tMxQzG8dPJ41v7TEbW5bFk5WPtPh+4bp+0n
XVn7F8LnpMV7P9Z/aAjh8naK9mvW/jSF2LpUJ2P5MrIW57ia47vXsv5BCJs3
Zh+jNpC7CPF5t878dNb/6AgRuAUbHy0m6wpR9DFau48L6z+EuD5g28fokeSe
Quy6/MM5sSvrT4Q4vHu/s0kTlUcfIT6Y3bIrfMjWF4WYe0q+bnQueYAQxQfe
B5amsvVGIdq2nutwP5psKMTvpWtD2wWQjYRwv/jRq8CRPESIxHMntn/vRzYR
wq3H13cLG6g+TYWYd81zr302W58QwsT+3OZxG8ijhJg9zGdo6zC2XiGElf1I
75lPKR4thXjz1HT6wP1s/UKIAfaaP746km2EmBJsOHBFG41ftlz5yWRF6YVk
OyH6lN/w/5tEHi9EXEtjuE4A2V6InT1lBW42ZAfu+9f9eLVEgzxZiENdbO1q
+TS+QgjrBwOXV4wiOwnRYbNpkJqdf3EWYuSSRTm3OpFdhNCbXT7ddw47HyGE
xtnCtoHxNN67CfFyXtzq+pt0P+AuRO6fMquYPmQPIaIc39q3JND9g6cQFnJe
8qOh5DlCbO6UvCD+Id1/+AjhIH3ufuog2VeIrDr9rbfnkOdz5ZXMO3l2EHmh
EK/zPr0Ja6T7Gz8hWi+cVSmukJcIceu+xfHlSeSlQkSPmbpr/AryMiE85pcf
XwNyoBBfP1V+SDQjrxSiNipVU2VFXi3ERneTdhdnk9cIsba3qeztdnIwF4/J
m/o+PUMOEXLjd9/vB2vY+Q0hhpvm1t7Wo98fKkTm24LBXs5sPleIjB7Vqn87
yOFCPLY7odxTzPLZCXFp3f7USGMqv0ghBC+e7B3PyjdKCKOh0+Ze0KLyjxbC
a3zyw8EHyDFCnK349k23B9XfTiEG55efVyWRdwvB07BepexI9R0nhGnojrmz
N5D3CTFMkpm9oZwcL0RMscO/a+PYerEQp3zjXvURkhOFkP+se7eoB8VbkhDm
e89eeBJPPiKEcE6vTeUsXpOFmCF68fv9RPJxIZraHq9pCyanCGGg1jZ6nUxO
FaKr5dWEF+fIPCEebYtN+nCXLBAi/enDAdPZeq+Qu77Bi6092HkosRBTb8uO
4hNZyrW3HcPnD/xKlgsRsXZ02fhmslKITeaXC7ax9UK1EN1fvIjyfcfuV4U4
+jSiwP4BOVOI6p1ys37s/GMWF3/hgYt77SFnC/E2Pcw3bDG7nxXC8at0WPx4
cq4QtzdeuXmoN7u/FWJd6cXR5u+o/PKF8P4dnt8nje13EcI2fIrWX1fyVSH6
Ptn1We8j1cd1IX520SgYvZ1cIMR/EyKHHf1N9VkoxKfWeTtDlpCLuO9/5NVT
W8HOxwqxqDVznPo5xdNdIe7HnJg+qhN7XhbihWJ3J2dHisdSIUJ1hswv3kfx
W8b1DytWN+54R+3hEfd9s1c4x3qRy7n69fb8m3ybnmcqhCi9s7qXNsu3VsnV
t2vFl2Fs/uG5ELrLdzv2cSBXC1E49PzI3Tn0fPVSiGSLz3UHhrP3Y3Hxu7f1
bNNRej57I8S53n66S37R/EitEOOfH96fPp9cJ0RQxaL4E+dovqWea2+3J/UK
60ZuEKKq/eUOz9bQfE0jFz/d+1ZvfEjzOU1C1Af/XbDRhZ3fEUL/89inbidp
PqiZ6y8u87asYvOh37jfO/3Fe5+e5BYuHnbdnLchjOVz4vrbRXuujPpA802/
uf7j+pSnDcHkVq6+rKNLAltpfqpNiMuO5RU7ksntRCjwja80GUPWEMEm1Xe7
wTOa39IUIc1q4faWBLKWCBdO+I4wXczyRYkg0HodbLCI3EWEWGPfiP3xZB0R
zBLuHFA+IeuKsLbTCtNoNt+qJ8KBu76RC1g+5p4izNl7d6nFbpZPQIQvh9RL
pp0h9xHh16tnjyzfkPuJYLSuj1eBCV3vABFubikf2RBNNuD+vkeGSYc/ZEPu
31Vj7yoVLH+dCC3dF7q2HaPyHSKC8cB7I5bdp/owEWGg56ax109SfZly1ytz
n/7Nme1PFKHoztT3FqXkUSJUGHzekM3OV5mLsKfr9IW+7LybpQh/k3UT3+ew
94lx5fk5enDnj2QbEfRHHrvbPITizVaEexMHzwhYSrYT4fL79C7cCEPjvwjp
V9plv/1Ctheh+99dqYPA5jtE2Lh9nV71AfJkEepGWw76eY/Nf4hQ6+QpD/5D
dhLh7QzHDSEDqH04i2Di3tEty5zsIkL/+twfEXZkVxF0F1z+cs6e7CbCUj2L
232Y3UW486ObvNqG7CHCiFOTm8Ybs/dlidAusL/DVnbecI4Ig1c6uVY9ZvMp
XH1tvzzNWkD2FWHGjO16n1ex+RXu74v0vq5l6+cLReh2Wv1yiTabbxHhj/bs
pZJqKp8lIrQOzvoUco7lDxbhq2jd7a37ycu48nn1xypyETlQhBcdKmaPNSGv
FOHuuBVnU6rY/kwRhntt8r22hbyG+/7mmQt+svfDBXPXe2x0U7QfOYQr768C
jSMl7H1oIkwK/lDZfQE5VISn/9QFPTqSw0TI13PXkh6heAznyt/VKHy3PTmC
i+/R8nedv1P8RopgcKJw7uuLbL+3CLd3LTC02UWOFmHHDY3ckpls/UeEXIez
Gd665J0ifHSqbttZRO1jtwjRw68/PbWZHCdCc/WgIxXD2ftyRFi4NK/mwxdq
X/Fc/Nx4eN/rFTmBu94dx4cvbyYnijDswMNl3Qaz9+uIsH26w5nKBeQjIqj4
m490ZO+/ShahePhr0/i35ONc+U+eU+NuTb83hWuvQaPrpHvJqSJY377nIGHr
vzwuPspahvxZSOUlEEHJ76s9sIYsFCGnz1T5j8lU3mKuPWqGtETyyFIRJnTU
Ov2sM9WfXATohi2KjmPr0yK4RrfsXdad6l/N1X/B2lOG6eRT3PUGXTP7YUnx
k8n1b/N/HijJI2eJMO6PfVv3CRSv2Vx9hf/lJ5xh+1lEePVbaiY0pPaRK0Iv
/yn8gv3kPBFKfF5c3cXyW+dz5RlhOXX1MrbfXYShlusuzmXvY7sqgmbyPbPu
81n+YRGO7yz/OqWBXCBCqZ7/y4VHafwt5Pqj8ESX/9j54yIR/jMvHvjXlOWr
FmFe0z1b0XfyXRHaNs8Urc9g478Ilb591uQ70v1CqQjvXR5kfstl+W1F8Ei6
2CusP91fPBLBb1Gf7PJ1LJ+GCB8muN5ZmEeuEEEyrCzpxR9ypQip0sjVcfZ0
//JchJHO2e/6h7N8GyLM/uo99+wZ8ksR2ieOXr2/jlzDjW9xRYrvven+6I0I
Wd/cTiSMZfk4uP7HO+2CKch1Ili6n81ztGf5Obj+vixnY4o5uUGExMCMH0sM
yI0iePG7jHzbmdwkQmN28gE+2w/5hRs/3s8a1vyI3CzCOb20AyMU5G8iSPs/
PGARTG7hyiOp7bvciPyTi+/DujNciqg8fosw1fCE/8Rl5FYRHhas+BXzh8q7
jYsfyVXVxxPkdmJcCVr4M9CerCHG30O7fUvZeoemGB+9LBIPJ5K1xHihp0z2
m8DyhYuRKys3b/+S6r+LGPLcA72yt5B1xOgUHJDfXZOsK8agsOGd2vZQPOmJ
oZg9/qi5NrmnGBkeTtUHktl+IjFWvZtndtGO3EcMXyOduVua2PqCGEKbb6kv
2Pn3AdzvTZeMDUhk6w1i6E2O7ukRQjYUY0iuIjDTh72/UIz123m3/k0mDxEj
kb/r8yx2XthEjOtTXrwe0p9sKsa+av2Uyq7sfYfc562zUO7uRh4lRoeJGe+u
mZPNxVhhfT/eez3ZUgz+/uPrk4rJVmK07zqg0X4YXZ+NGNlfk15lRJJtxVgT
lXNtQjHZTgyrgca3TXtSeY0Xo3WktujDYrK9GKPvnx3XmEV2EOPE4vsBmXpU
/pPFCMn4t9l/Fxnc54tfrhmgR/XpJMbDf+d3Lmf7lZzFKJy3TisigeLDRYwG
4cFzaZvY878YQX63F/5k+W7cxPgwtqX2HGsf7mLUzjpTEtVK9uDK79qfidPm
sP2TYkSfWeG4l0eeI0afE1EdamrYfkoxht4/+KRwCM2P+HKfr3Fa0RhIni9G
24Y7GbNV5IVi7vlj5B+br2Q/Mcw1Dj4YyfaHLxGjb1vHit4H2fyrGN9tr68d
XUNexsVD4oyTXcfS/E+gGPb/ZvxJ3k9eKUZ1U2tR7yryajGaH7XrLTGl+ao1
Yjj8/vqg9xpysBhTYwcf0JGRQ8R4f9je53MleYMY0hWrFtzS/v4/h4rRRY8/
tf0YcpgYk77dK3ZYRA7n/t7w60lVDDlCjKN7J/2Nk5AjxRg8TWPBtEJylBjl
O98EzH9LjhZjgaH5ppvtWv7nGDH8Il86LhtI3inG5/5HjsOKvFuM8zvfVyyY
SI4TQ7Nbfvl45n1inDmgzR9mS44XY9jsgXWF5uQEMQrq74ctHUFOFMNYv/DR
LFNyElefaRVl60zIR8SYUjfT9pkROVmMnO9pZtYDyMfFsLX6eM6rOzmFq/+1
6WtfttH1pYphvWxYZUkdmSfG2AEbDQ1YeQjEKKl/X3rsKFnI/f5ePaot55LF
YojWDh/gpkeWcvGQbTzhdBnVl1wM9YCVjkv4ZKUYr0x9unYIJ6vFuK1ZaJTn
Sz4lxob97++ETCRnirFpyuXSvsbkLDH+rRjwJaMjOVsMyWbp4+b3FF85YoxJ
VC5dcpucK8ZAA02brlJynhi7/Ko0a9n8Zj737/e1OjxfQL4sxqJJeoPujiNf
5frL+1vWbxxIvs7Vz/oOlbpa5AIxJnd5pzH8B5sPFyN/uXfy2k/kIjG2SO75
33zP5se59nNH06P5HfmuGDGvjxW9rWfz5Vz/7v6qYFczuVSM3sfbvczSpO8r
4/p38ylLhwwmPxLjpk7XPJvJ5HIxitvm9DdcTK7g+rc5fYfM38rW17j2EmeW
23yE/FwMyw4TXYwz2Hy7GGsjnz6fxtZ3XnLxNmF+73fVbP5dDI0B935p/Sa/
EWPjo7KJ59j6Ua0YPSYMuGLhTq4TY7i5a6eK/eR6rr9ase9KQQW5gXPv0g9j
RlL8NHJ/z3/jI99IbhIDz1Y9uKwgfxEjM6Etdul9cjM3ftW7zHOqJ38T49Sw
3Q9s/pJbxOjsl2MzlcX/TzEObN1214+1l99iXFP52X+3Jrdy7T1zst2OaeQ2
Lr6mXhYF+JHbSTBxre+IblvIGhK0q7VdZXiUrClBZPIZ8wQ1WUuCZEVuQ4cL
5E4SOM0dVdSYS+4iQe3lYd9Fp8k6EhiGWf7JSyfrSnBXltTgk0TWk8B9+ZQp
92LIPSUQXs9PnbWRrC9Bdf7+20kB5D4SOFrYNBl6kftxn9/sfdvbkTxAgmWG
uQmDzcgGEvz+0S7lQU+yoQSz5F2ix36j8jSS4EBvXtYCVv5DJHhuGXIkmE82
kWC7+5v8RSvIphKcrjx3PHs4eYQEHls3Dat7T/U/SoKc2wFPVqrYeiV3PZnB
yuIQsiX3/ZHuTQ4T2PqlBJfeph3b1YlsI4G5+9d+M9j4YivB3JL33bPOkO0k
eHNfYZW3izxeAn2H4JyFc8n2EmR6eoasZuexHCT4NPNsyALWHidLMPnv1POL
2PkOcOWT2fvsQHaeykkC3Tzv+us/2HkICT6qnu3Zkkx2kaDKMKGbjy07HyXB
qA83Jvd6TeO1mwRJ/ZTLggXsvIQEgy1LDpmx/FUeEjxefHvOH0c2/ksw/eXk
w70M2PjPxZPta7/MH3S/4MNdX2pIUEs+2VeCK+KP6L+DPF+CXUOvH3KeQl4o
wd+rOUMetdH9iJ8E/fZrfKrMJS/h4v2838ev68hLufLYpR47zpq8TIJxVh2v
8ruz8xgSnFyrPvinK3mlBN6Ge1cYG5BXS6BtkR0ptSWvkaDz8iaj6tnkYAms
4zb8DmbfF8LFj648oPoQeYMEayOSU57lk0MlGDGmX3tf9nwQJkH8zu4+dRPo
+sIlEO9oPdYumZ3v4sp3qV/h2nZUfpES9Do9lx/JzjNGSfDKoNF1Uww5WoKB
fysmvLhBjpFAeW5IRfw/8k4JXjzN/32BnWfbzf3+j/V7CkPIcRLcCNGtcWXr
r/u48nq9YnT/anK8BHkRNbcd+1E8JXDl0yrZ924+OZFrz+ojublp5CQJigZ2
P3W+mnxEgsRzp3/1Y+tvyRIMq9QYFTOTfFwC18LYST3DySkSGG+xeGObQk6V
YGrNPo2R58g8CTS/+m2VFJMFXH8WqzLZ9pws5Pz+6uUAth9ALIFXsK/1il9k
qQR28lluNVps/Jfg/d67Ggu6s/FfAr55+fK+bH+GWoILB6yKRmqw8V+C1ecC
1vh/ps/LlEC2/qj67DNylgTrylI8ThWQs7n4mdnTVFvNxn8JLJKm511NZOO/
BC47Qq6I1rPxX4J5P3Ny17PyyZfA/tDGjQVGbPyXYJrr0SMv2Ph9VYIup64G
xGax9W+uv/7l9XPqSnKBBNHWK81C2Xp5oQQhi4JGl52i+i3i2r+dQ5Y1O+9W
LMGm2c/MvjdQ/NyVYPQM7VH7WH63Eq4/qV504rgruVQCdcvU+XXt2flZCZZn
7NXO3U7x/Ijr7yZc1pv9m+K/XAJVpc3Np5vJFRKUBpYNNvrEnv8l2Dn+vP2E
xeTnEpwxKC3Yc5OeV6olOKtz8oKnIfmlBPMHlGSmr2P77yTQmFYzLYedt3jD
fZ6sOObHN3p+qpWgk8RzxNpx5DqufzqTPfgcy0daz41f2xPunXpGz3MNEtzu
+OXUJydyowTdIyyv/mX5qZokqLNaPb7KlZ3fl+CdhoZ6bg3N3zRLsP9h6DWw
99t/kyDCeVpK3QhyC9eesmYlvy2n+aGfEqwJGNH7w07ybwkaHOt87liRWyXw
zxvzQOsFzTe1SRC76XuELsvn1U6KSVOfmdWy911oSPGg8qpS2MTygUlh3EkW
eTafrCWFjXr5a2EauZMUfUfMLvKPJ3eR4sv5f21p0WQdKSKrPzd8CCPrSsG7
ljp7VAhZTwrV57fvxMHknlLox4rDdoeS9aUYMjy76R97/0cfKf7c21rUX8Dy
C0gRczv+2q175AFS/BgbalrC8hEYSJFZsz42lu1/NZTCaFy4X1NXKh8jKeza
ew68mUUeIoX7JK8Pm9xYPjIpkjR7P9tXQDaVYu7nfot79Wf5yaRwrO1ce2cB
eZQUl22nFd5IYvnKpOhgPH7r/SKypRRfZ3bYV9KePf9LUTCnszRjGtlGCqGZ
bXJJMtlWip36q+bO/Uy2k6Ko6eDzYLY+Np4rn2KPT8OyyfZSvN+gvL1Ziz3/
S3Gn46mzq6eTJ0uxy/XMxh6byZCixXR8WM9kspMU86611ZSpyM5S7PAYozUq
n+wixdAJ22XH2fvVXKWo0H3R7e99spsUiQcHmZgxu0tR4tMx7+J1socUn4bu
NbFRkj2lOH9OqT17L3mOFLeWNhkZLmfr/1x964V+vDqZrf9LcXvJJKUmyy8w
X4oFA/523f6Drn+hFJckER87PGbr/1J8bHzXkZ/B1v+lOHSqw3+32fr8Uilm
e33sFMn2Ry6TYubhFws2/UflHSjFhcwfwTd3kVdK0XpKHJDJzjOuluK43aGT
+r7kNVI0r6oztrnN8rVJ8cJg/ttVvuQQKd74bboUoMHeTyiF28LYbVUFFH+h
UvQcP0hdfIjlc5Di+97//KYsJ4dzvz829LwGmy+OkKL9g/y5/t3IkVL0k8yR
zmbrHVFS5OWeCzcTkaOlKJ0+drcdW8+MkWK8VaWXbgfyTik29Ofn3jzF8kFz
8S9fFx+wghwnRdCf0PNeduR9Ukg7i63/DiLHSxHq3zJhQ29yghRrumdfC+xD
TpQiPn6T01T2/5Ok8NKZ1nhmBPmIFOfmjJp3Yjw5WQqH2Z3G75lFPi5FWX70
qrWrWX4ZKdq1LPp3nfU/qdz3Ny3qq8gl86So9FgwNo31ZwIp7qedN4q3ZefP
pAg+Hz3lBusPxVz/tf1pWuQHspQrj8qXlQ7eVL5yKXrcMZbm3GDnU6V4rP3n
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
yFbc9c1D5xkBZBslgniOH77wybZKOPtt6b/6PdlOCePDsVvmTGXvN1TioLPj
f18uku2VeNFn+1izUez8vxIHruzPS4pn5/+VsKuSbGlg+cmhxOeVwwO6r6T6
dlLi1av6FSfusv1/SqxaqP8qz5jiz0WJr3GTA4az51NXJUyDx/T4wvYTuSmR
EqLzcMlXsrsSg2Z18HWwYc//Srz9FTL/Ftu/5anEzcGO5+7dYM//Stz6VtQk
6U3PGz5KdDLXlWdsIvty9TubXx5RRZ6vROMRwxvmbvQ8s5CLvzz+LGU+2U+J
slV91/xi+82XKFFu8f71snjyUiUECW9lt9+QlylR+sW09w0rmn8JVIJnMfmq
JJy8Uolfw4N07dl8+mol3Iqabz3/Rl6jxKze83z6WtP8ULAS4u4TV9UEk0OU
WFq8su6JkrxBiRlOZv4x78ihSu5+9+T6WUNpvipMiZML+I2TlpHDuc+bdvme
u4gcoYSfYazq7QtypBI+dw+vctb/TeO/Epu3luYrp5CjlTDTQvbuleQYJSJc
/nS9v4e8UwnPic6LO4rJu5Xoo91l6uNL5Dju+78PjT33iLxPiW9J6Z4adeR4
JfY+XDYz8Ds5QYkT/k6Bme3+0PivxOUVQ12Oa5OTlNgWtcTLpTP5CPd7Da9V
v+lATlai9vFPw/Bv9HnHlXj4s/BJTiU5RYlHhrMjjM6RU5Xou3XZ2s8HyDwl
Zm/XMdm9hizg+rNPFx7FeJKFXLwXl03dO5Es5tq/ZnVYwAiylIu/S9ufbmDl
KVdC79GeQZV/qbyVSnTOc5zPBTWN/0okZDj0lt4kn1LiiX3rtqkCcqYS9QGn
NjwNJWcp8axLzqNhbD4zW4k9N0z+PdIl5yihzdM6OJXNV+Zy8eF8UXDgLDlP
iU+efb55HiTnK5G88e6X+2x++LISOs0X9azmka9yf//lvkXZFPJ1JXp3Lr3+
1JJcwMXP3/s62wzJhUpohGySP+5BLuL62+E9ooZ3IRcrsXun5848bfJdJap3
6w53YfPbJVx7dQ7aPLobuZSL9+VtsTd7ksuU+PkgrWzsAPIjrn8KLOe3svnw
ciVu6PeOkVqRK5SwrvxkYsR+fyX3/a3Ojm7s+p5z9dX+w9sl4eRqJR5v3T2s
Qkx+yfU/u+oadWvINVz5dWv/68UoKu83Smxqt7a17xZyrRLX63ofH51HruP6
g8XNZoEN5HolNq5PevBFj+KjQYktt2ZUHLEiN3LtZ06IVvdZ5CYlLGuyPAcG
kb8oYVEa0flfHLlZiaGXI55bq8jflNi+rUuyirW3FiVybPB+jBa1j59cfX/1
y7s5lfyb+/1x8VDuJrdy5duimDD8CrmNK6+ezdt2viO3UyHt6rsTcW1kDRXm
uYbFz+7WSuO/CvvHJNrv70PWUsHpq2v3fwbkTiqsseoWpjmE3EWFqarfIRam
ZB0VJnq9jrs3kqyrguk4iwfdLch6KmB0SEHRaHJPFZI+/9hw34qsr0KviR8W
l7L/30eFkPcrPf4MJfdTwT/7b0J8D/IAFbY7xSafaqHrMVBh2NaChROfkA1V
OBmcJbl0hmykQsL0AQaH9pGHqLBgbr9HxwPIJios1R45pacD2VSFn9e8vu/r
Rx6hwpGjTk+utFD9jFJhy5oFR248IZurcO+Gsv/QHLKlCt+3N2oYJpGtVJjj
eHqMYhXZRoXp2isW+Y0n26pwY/+jRQn/KN7suH8vLXpfkE8er0KnH0XH3IPI
9iocMxY/X8P6Dweu/hacM9DJpnifrIJukJXjvsVkqDCiV2Ddxj5kJxWK/00L
Lq6m8cxZBUnDiitjTpNdVDh14fism7vIriq4mrbfPpKtP7txv+9R/v1LbP3U
nYuXKtHBP93IHipMG5D2pl8NjbeeKigavv6XryLPUaFe7dRHtorso8KO5F+b
ffqTfVXINHbkLb1F4/t8rvzdbbUObGXjvwpj3Q9Nf8LmN/1UuBpnlLlzIHmJ
CvmjNm9Z1oG8VIXO2g6agma2/q+CS2Xv0I/v2Pq/CoHhAcs6sPWQldznvZg+
4Eo5ebUK2dKSI3vY+bA1XDz5Oly0Zg5Wod/eNJN+T9j5PxV2VVWpvV+z838q
HPy92+jgD3KoCiuKehcY92fn/1S46TI1TDiVnf9TYcwfj/072HmiCBX+mFQU
VrHzKpFceXbUm1ZexM7/ceVv9+ei6yd2/k8Fj7K7/SS92Pk/FWoeXdxY4sDO
/6kQnLWps/9adv5PhUMLTquesP0JcVx9W5dNu8rmv/epIIp9mrnRgOo3XoWB
bj5jHiwiJ6igs6V710vHyYlc+5mTdm3XXXKSCo9jVvbc0kI+okKOnUUrbyBb
/1fhdV/nHv0c2Pq/Cl7T/oYdX8jW/1X4YaPVrWIrW//nynNHxs+qNDKP618i
vArWXycLuO/X7rVN8ZYs5Nrf/dsd+f/IYq5/ENcMGteD2o9UhbZZFwuC+pPl
XH/3fE2c/wA2/nP1cTa6Nq03G/9VaH0qn/GiKxv/VRhqWWUW9Jc+P1OFt7HO
kXYN5CwVNMat+P35ITmba2/16QfKzpFzuO9rjY1xZeu7uSq0P51ouH8JG/+5
75N2GjPEmI3/XLyucpx6+AmV52WuPzooEhXFkq+qMMBXI/Ur2z9yXQWHYp/V
Zm+pPgtUsDa39TnBzmsVcv3Lf353Ji0jF3Hx9dRplAk7z1msgrnHDIOAJrb+
z5Wv2uxmQDZb/1ehttVY7x6L11IV8gLGpE8dxdb/ufj7ePj3+mcU/49UeCa3
C9y9nVzOtZ9RYeuP9CFXqBAt2/A8X8HO/6ngnD7B+6odO/+nQpbTpG7X79Dz
RzXX32jvMfkbyJ7/VUj5l2rc1pk9/6vQ6GgfZ5pHzztvVNgQMdTj/Dr2Ph4V
ytoVz0xi+UPruPgb+Skzm+3vq1fhybx7yfPlbP8fN/718YrRXsn2/3HlMfWp
RRx7n1OTCoNnN78T3aDntS8qjLT+cnmSLblZhV9DRkeOYPmyvqkQX7njVpAW
O/+vQoChnfD9Gnq+/MmNjx0m9DxXTvM7v1WoOp/yrKc7uZWLL+f1X05W0HxQ
G1d+g31WycPI7dTIOmuQVzuErKHG145b5mS+oPklTTXUb927FovJWmqMHvDm
mNFGcic1vvxas07flZ3/V8MiyLbnKLa/VEeNvpYrV/vrsvP/apS+CEr73MbO
/6uR7qh3NK6Vnf9Xo9elzg9ms/+vr0afoLudxk0i91Fj1PTn3o4H2P4/NWoV
NYpbH9j+PzWmltfIU6bQ9Rio0aCaM8szjmyoxtw+Cd4j8slGahxy7Z634R15
iBoz/MLThrL9iSZqzEttuT+DzRebqnHU9tKDBJbfdoQaE1Ynefdi501GqfG9
U+ORW4PY878apvfEZkYHyZZqPDLbefOmLnv+V0N73J93F06w5381om5bRQ3q
S/Fgy/1e1djvC2LIdmqMrEvq4/mQPf+r8fP8RdU5bZb/T42cY/MG/jFiz/9q
WLvFx0aNY8//ajS9yRzXcRZ7/ldj+TssHL2M7KTG8E9xe5PDyc5qZN8rnGq3
n+yixoO3A15rnWT7/7jvt/th4yBj+//UUNbZ/lvI8pu5q3H1Wk+NGWfZ+T81
Pgb+F7aA2VONrSfU/v0z2fk/NbR8r1V+VLDz/2osEK46yWPzhb5qrNLdU/CV
5T+cr8YsV8XfeVHkhWrs6ze/cQ7Ln+anRu/NUxo6snyIS7h4bquTmrJ8BEvV
0HF9NqH+KHkZF2+Js/F1PDmQq58/q2eubGLn/9SokI4yO8/2M6/mfu9wh7V3
I9n5Py7edR56OLqy839q3HjQ5WZgb3b+j4v3S6esol5SPGxQY2UXP+szAnKo
Gm9U+3KtZpPDuPJbYDfs63uKr3A1jHsEvG6/ghyhxqKAInNHlq88Ug1pip7u
ARb/Udz1PejiFnOf2ke0GsdWKRdWR7D3P6nx+9Puvl6sfe1UY3CX8sjwnux9
UGok9ArLaflK7TNODcsyw8If//9+KO7vvZ9Pdikgx6tRIMCkrWfY+6LUmD7V
znGHgJyoxoWlQ/zKE8lJXH+xbG6XwFjyETU2bv/wz3UrOZlrn9NKLLuw/evH
1ah/3tEF8ez9kmp4BPz4dlpBTlXj3UyJbQDLH8nj+quoQbIRLP+IQI239uU9
ah3Y+yfV6P/v59YhW8lirj4tJ1vPvkCWqpG/Z+eGwhayXI0i0bwZD1l+dqUa
dQdnTOFtI6u5/mbD9zkfWf7LU9zn2b3I6tiL6itTDcHd/4Y+XkvOUuN+D+9n
/R+Rs9XQ85T+2ORG9Z+jRtWyx0NnPSPncv1ju5HPhsZQPOWp4daBf3AjOx+a
z8X36ZhjX1tY/j81PP/NCjjpTfF/VQ33ghsncth++OtqlMR7FYjY/vQCrjx6
fry3jL0PrVANxY52mgens/N/3PVgb/m4cHb+Tw0jUY/Yniz/8F2uPo+Ny6mo
YO/LU2Nxe7NTp9l5wlKuPZi+OjmWzbeXqXFqYcjXFQK2/s/1R3W3jA1/svV/
NdYUt9RfY/mzK9TwrXXJjhCz8Z/7/MqXJl/Yef7nahzu/S39KjuvWa1GyknX
ietYfo6XXHu48CvAj+XDrVFjwPeNbidYvoY3avQLvBn7LIid/+f6p/zhtx0i
2fl/NU53ij+3bS87/6/GLgU/sDmJnf9Xoyyod3n4MZavlxsf1NteTDlKblLD
P/TO7Ix9LH+vGoN4r5UjWP6IZjXulV57P8Sf5fNV48qSoxePTSe3qBH7MNYk
2prl9+U+L+Wa2U62/+o3V/7WQ06UsOtv5frjHutm1bJ8wm1c/a4+kuf2gNwu
A9cKtCabsf1YGhlI3PAv3Hcbex9oBtJPPjs0zJWslQFs/f62rz57P2gGRj1/
hQtvqb66cJ+3vnNy0kX2vsAMHP36as9Hth9LNwM9vn/57wh7/59eBuwXqF7t
8SP3zMCzhbEH3Z3Y+wQzsOf7ztFDTcl9MnD26c4jMzuy9wtmwKZX3EPNlxRv
A7jf98Ni67GzZIMMfH/k6jXh/3q677ic/jdg4A3SICFKKV+JBpIVSlxWsqIo
VIpkR0oloSgVLUkTJSFyr3POnSRFyshIpZSdLbMQKuT5PM9zXb8/36/q7j7n
s9f1iUIbiuD1a6Vf/4sf858IXLZO6pnlhDYSwZ/o0ReWz0cbi2BDUYBP2EL0
UBHs3yleHrkUbSoCnT5NCvWr0OYi6DTQStPyRw8Xwf2WA9+CaP3FQgQLE7ae
LU2n+L8isFdeYbdYTvF/RfDMKfTvi/t0n6EI+htYnOhCz2slghTbzkUz7eh+
UxFIxCU1M+g8tTX7PiWDRib8oftORWDwxXekFsXPmCyCiRkpYe50PhpEkDY3
JcbtL3qaCJxmDe9RRfHVZ4ggHXo59NxO+/9E0G3b5Mjlctr/J4IDb40MdrfQ
/j8RuEfPePie4tfME8GHzrPTn9P+XgcRvFivvX30I/RCEfzVumIxYiqN/0Ww
+NS1RtV8Gv+LoDqho2DQCByvuIhg9oZn43eeRC8Vgc+PwTe1++D4x1UEJhsG
/PQNRLuLWP+YP1ZzG+3Bfn+D4sVaXRyfrRCBl/AvqNIT7SWCExYFrjdOoL1F
kGEf5tDtHXqNCA7HbhKUh+H8zDoRzM8/uSV+C3qDCITVH1+pFaJ9RBCYN/J5
hiLOF21m6XlktrvWfPQWEYiO9x8nykD7i8CwafC30zQ/FyCCI5Jf1oMscH4r
SAQX7BVOPfVFB4tgju0fPa08dIgIQs8W/d74CL1TBCVvuzdpqvzF9l8EaqF9
f8ePQO9m388iQmeOIzpcBGv9Dz3s4ofeK4Ki84qD4+PQUSx/ac2ybD+B3ieC
0j1xTpHn0TEi2B287da0G+g4EeQlnrDNvodOYM8TmDrsYQM6kdUHWx64N9Wi
k1j+mBh498hVdDKrX74n1aeL0ans93sY1OgeQqeLYPKI8TGZu9CHRaDtBfEl
PuijIng3pYvZJA90Fntfg392DV+AzhaBZzMnip6MzhHBtgFJXlVm6JMiyJX0
eTBQC53L6ouyBuc5Lfh+z7D8ds1tvN5N9Fn2fVPOrjiWgRaL4FRV/6YxXmip
CJ773LmnSvOjHHufx/MqunzE9BZEsKJVfeneAnS+CLyHx3wPiUEXsO/zdHVB
xWp0oQhO+ziaatuhi0Sw69zahyPN0MWs/lvfVlPUA31JBLYNa3bO/475s1QE
N83MyjwfoctEEJsZr/GwHH1VBNv3xsd7cujrItCq9ohUzUZXsPxWI7WtTULf
EoHvZFs1nf3oOyIYxgYA1hHou+zvPw5YtXQPuloE9V5hBRvo5/dYfW89JbGc
/r5OBKPazB0Pp6DrRTDYzv/ZJpoff8Def2HeKmkF+pEInjy8/Gs7rT89Ye+v
11CH2OH4/M9EYCm9WSp4o5+L4GR25eTDKeiXIvj3vFPDlObLX4ugTj82Nv8p
+i1rPzb/SNjdgW4SwffAWfMn0vz4B1bfuBx7qTIG/Ym9710PUvsuQn8RwSr4
4vDfdnSLCJRLhhXnnEF/E0HF28Hmt1+jW0VQNncF93g45r+fIhjU2W6nHYxu
Y+1t48CzThfQHax+O3R85fr36D8s/y23kP1W68T2XwRuogtdpv6HVhDDlIbS
AyWWaCUxSOzn2thMRncRw8ZYm5uT56BVxHD6+LIeMme0qhgKx5Vch5VodTGc
NLRKC9+E7i6GD15i700haE0xpFxLcToehdYSQ3flUnPDA+jeYnhd/XW6dyJa
Www9Ew+M3bwP3U8M957IRoi3oXXFYKXws2HxCrSeGLLvL7TqPxM9QAxPlt9K
tDNFG4oB/pz326WB/k8MNyP/jZQ14/syEkNcikKr0X20Mfu+35veBV1EDxWD
3rfzoeLjaFMxzHW+nTQjCm0uhhcW3DO3tejhYngYGGRcOA1tIYb4vTr9Gvqi
LcUQduuu8rRnmN6jxXCrrKRnzGH0WJYej/XP/52LthLDtdmR47//wvw3QQxX
UpceDMtFW4vBOvvgw2AP9CQxHHXTP+JghJ7M0ufc5Hq3FiwfIIby24eaR15D
TxODmZ9GN+dM9AwxGLxXaH0UiLYTg3bN9Rt689D2YnizqMRqogF6Dssf3nVb
Lr3B9nKeGB6s36iZT+vVDmKI3NtiY+uAXiiGgV+OjM38jO2zkxheTYjr2xKD
XiyGloXvtuwch3YRQ5c9j6UWP6j9F0P4ZZMrqTfQrmKoy628NScX7S6GdtNf
AZ10Hs5DDNsly1KTAtErxMBF9xoftBLtJYb1K8sDvjjQ+r8YLmo2WUhsaf1f
DHyV8pgy6o+sY/l1H2xR+I/W/8XQ72Rpc30/tI8YtnTt8A8nb2bfpzk7dqkR
egv7/i9PNjROQPuLQfOT33HZYnSAGKr++1z0nc6LBInZeLK6sJqeJ1gMnrJr
zztO0fk/MRxxXv4vjs6f7BRDx1D9nUYv6PyfGNad7e0wjNZrd4shzbfbOUt6
v+Hs7zObS5Q20vk/9n2e5vhPz6Xzf2JWfyXVNtF5on0s/dPWCrIBmJ4xYuic
4DJdtBAdJ4bpy4I9VULRCWJouB6vXX0KnSiGECW9pa630Eks/9aVR2V/QSeL
Ifm3YY7Ql9b/xbDAZ9aTfNrPkM6+37x+hZr+tP4vhrseE2P+Hqf1f5b/d9b8
e3CL1v/FcIlrX9D1Pa3/i6Ep19P/1x9a/xfD9Q7V5FRVLC8nxVCQoe2zn9rP
XDE8ahs760d39BkxBE/67JtF+xnOiuH49oIef//i54lZ/j881dmKypuU1Se1
2a2vnqI5lp+8B1zZQeVPYOXhcXel+BPofDHsXOa4o3ErukAMid5RqxOt0IVi
+OHcbvDqG76vIjHM7KnfdSePLhbDDJeMWxFB6EtiUFU4fPXEVHSpGP5tHGvv
rYUuE4OpQtq9Z420/i+G3LOdw1dKaP1fDPr7fVQDaX29gj3fLw0l8QRa/xdD
1jgntS1fMb/dEcOnn0sHj89C3xVD/7nr26VUnqpZeoWZZVyj85L3WHvwLqBz
1wp0Hau/5ee+p36l838sfxnXvmiIofN/YvgcttB5qQWd/xPD0lJfPWvaH/SE
5SfxVrnVARr/i+HY888tFTSefi6GfK37/fMpXtNLMQzLNH828H/3cYnhsuBo
FheMfiuGjHMeu25Y0v08YjDkK8d+p/iHH8RQOqWvZQKdZ/gkhglXnk/dO5P2
/7H355/V4UT3E7WIYfWQJecXZqC/sfZhyIC7X6ahW8WgPFOqFtdC5//F4Off
GBxK861tYnC418364io6/y8Gu/cm82yHof+w9k5dI2AtxQPoFMPe6FUhM47T
+X8JtIbL7V8uQStJAE4q9Cqg+ecuEviudt9jdSOd/5fAKR37plwJWlUCSf+t
zzm6B60ugbAakwbBDd1dAk4hq4b3moLWlICnm8uOr6PRWhJYa/D+9lVA95bA
wPat7Qs2orUlkHzt8cYlueh+7P+ln2m3pu+jK4Gcg2Y9jtH+QD0JrLANXrjS
Ej1AApEzeyjULEQbSsDq+e3qbgHo/yQw/MAPtQ9ZaCMJ/Isx5G/fRxtLoG+A
+i8R7V8cKgHHNq3BIbZoUwmU+nYsOU/7H80l8EfTYv6AcvRwCVj73V0X3ofG
/xIYM82qud2Txv8SeDSo6lrDMRr/S0Dnb2uJew2N/yWw9dbUiJsUj89KAgdr
/cKldB5tggR2XMszfT2Wxv8S6K09KEPZicb/EtB2iz29le4nmiwBn0bLyOhE
iv8ngdXt/qnxPMX/k4BDZujd53SeboYEtslmhU5opv1/EsgdE2HrS/ef2Uvg
qsOo3HX90XMksNk3wWbJEDr/J4EHfRMuwHDa/yeBok9//GAk7f+TgPnmx++a
LGj/H0uvsvUH75nT+T8JnDZvqVwziM7/SUDF7vOZVVp0/o89n37Iz8qfdP5P
AvKQprkjG+j8nwTe+y8+mFBA5/8kYLYq50Z2Op3/k8Cn1hJPi1A6/ycBw17B
wv/ioXlLoGnppMb9C+j8nwRuHddtvkLn99ZJoDGswe4snffbIIFvShFHjtN8
jY8E8peGbjR9g+m3WQI3F+dU7LpI97dJoPutrb7Oe9H+7P243TQKmUz3ubHy
MNXnxh0q/0ESuN4ytlLpDDpYAlqzdV5+o/twQiSQsc+h/iBQ/D8J+Op39NhN
8VJCJTBs7Njqxq4U/08CKz+0vj9M8R3CJSBT+W1QWYzeK4GFjzLjrh5GR7H3
Vf19l9t29D4JhKyeUrLXBR0jgdCPo7s+oPIXJ4FevR6s0aP45wkSyLOrvhH/
CstvogTWOPaMvXsdnSSBCRHJMutCdDJ739MGFlpfQKey/B5bfyjvBjqd5R9e
s6qd6oPDEpgT0Zj7leI/HpXAXRfdh0uN8P9nScDu5++Gf3QfTrYEZgX0WH7E
H50jgfJkRcdTx+g+SgmcFU3xn07rbbmsPEwv6Jfehe7/kcACBaPXD2l99yzL
Lyvc/zyYQ/f/sPSLqnd0DKb7fyQwQyqu6Sqj+38k8JLvMqid7g8SWPr+c39l
QPvd81n6jEr+uIDuCytg5XtAp5oF3SdWKIG4ZX0aBlC8jCJWn0W67P/oRvfd
SUCiELTo5kGK/8d+f5r7quAyiv/H6vtHGj8etFD8Pwk0T/ecE07xeK9KwH/L
ld7KjujrEhjfIzpu/j46/ycB5WkKWzopvuItVp+IHZVVdLA9vSOBzwtrF0sC
0HclIPZ3rB/5DF3N8sO3Jx3n7Oj8vwRm27n5eh+j8/8S+FJ6aJw+xa+ul8CF
fcMuj++H/YMHEii+oBr9k85DPpLAgGNb9+RRvNgnElANvmeZT/Fln0nAtUIh
3iOTzv+z8rG44bN3IZ3/Z/ZJ8R92j87/S2Bp/dj5GR/o/D/Lb2ulEbEKdP6f
1Xf5EV1H9aLz/xIwcDuw6K8unf+XQNqSy48G69D5f/b+2jzlXXuiWySg+yr7
+sMu6G8S2K1uv0zcgf+vVQKr9KwUJ7agf7L8efXU0Ebar9HG8pvTHdG6Wor/
K4EbSxMDEoop/i8r77pF/kn0vJ0S6FRf2WwRRPF/pXDmw9Qj4fYU/1cKI2JK
jat0Kf6vFDq8fSJ3f8T3ryKFzOfbupiVo1XZ73ub1Q3IRqtLQZak4ztwD7q7
FEbBvEZ1b7Qm+zx1fQUTSm8tKVRVVE71NEb3lsLs00kl+b/p/j8ptAVvr9p+
C91PChOdfjsfTaL7Rdn/y238beOG1pOCnf+qtmS6D3GAFF7sWx27heJzGkph
hsJCd6c/dP+fFErW1D+c+p3u/5NCVn/vwb8pXqexFLzyR0Unt6CHSiHcXsm3
VyvaVAqatc92/aJ4oeZSGFS5zWAM9SeHS6HocMqADT0o/q8UesWqWLyl+NKW
Uvhb0hZ3ge5rHC2FL+tNQzO86T5TKfy0nxsbfAJtJYW1KqJsh890v6kUFueU
qvSwwvdnLQWfw1H3RUHoSVJQ0473OSul8/9SuJye9ubPczr/z95nqvvZgF6Y
3tOkcFBXK71oOnqGFJaua4i23YG2k4L/gF8b/S+i7aWg8rxPyYdutP9PCubi
wnP8Ktr/J4WoeTPvBlfR/j8pxE30uLN4Fo4XFkqh81WfPvIyGv9L4VnpSSf1
CTgeWSyFafsGHHWi+QMXln9anIdto/3XS6Uw6Uue8QMHHA+5SuHKRTXBJAPt
LoWxdysMFJ6jPaRw63Z9lv1QHK+tkIJ0h2FKz81oL5b+J3ZePVSI9pbCoXLl
NE8VnH9ZI4X0kX+7bV6CXieF3ZlWifNE6A1SOJ5m3WmkiPM7PlLIz3/VmrgE
vVkKoslvskJoPnuLFEZW6D4b+Bftz9Jn2rQ9b+xwfipACnPPnD1/kOa/glh+
2ho/t6IMHcz+fkbf+31+oUOkMC+j2/Pkof+w/ZfC1LZHG3Id0aFS2Kzl+t4p
GL1bCpfW/K6oPIwOl0LT07yHyRfQe9n7er9Qw/4+OkoK9rOvrnD4gt4nBVuL
61f/U1Io/X+OkYLebd876eroOCmUHRj2vkoTncDKo5tlSWwPdKIUWtXqlg5U
RSdJwcqswK1UEZ3M8k/e8uhu7fj/UqXAPbSvqm1Bp0vh+/HQv1+a0IdZeow6
OGpRI/oo+3mpV1HAPXSWFH61r53T/wo6WwpP+lxdpHIWncPeR9OtU4Wx6JNS
aK/5Nd/OG50rhcgjLqPqR6HPSKG6e1jVjlZ8/2dZfuumvL2eQ4tZffbO/NUw
X7RUCsrFZ9x/jUNzUhC8PFU4FbTAfr/u/a5JjZgf8ln9PDNTKbgYXSCFRYfH
Lzt+BF0oheZ/CxfXhqCLWH0k+tjUdxm6mH3f1+E3HKzQl6TQ2KRxXLsPulQK
Hrfd5q6h9Ywylp+EmAHhVeirUnh9Oej6Bx59neVHnRv2/Wh9o0IKsXr3llyL
RN9i9UfAJbPb29B3WHpaOVnv2Yy+y/KXZH7m9vXoainc/6hS2J98j6Xvpxff
W+n366SgOzlMKWwXup7lB8slyfNS0Q+k0HLzjOv88+hHUrCWh2pytP71RAqO
Px1DrH+jn0lhWKTX8j06+PzPpZCzXn9HrSX6pRSWjMk1Gzgb/Zo97yhf2/5e
6LdScBMHVXnSelOTFCRdF0HrUfQHKRgXW+4oKkd/Yu9DQ16f9gP9hdX3o9un
aVhherdIIXnJpU3VEehvrPyME1Zeq0O3SsGmzSdqiD7mt59SMM3V77RbiG6T
QrnS0SDzIHSHFFItN7p9PYj+I4Wtl+smK59Bd7L0jYlUt72IVpCB0llRsHcl
WkkGtxzvW5VR+ekig2ZdNW73d7SKDKbPXhR4twuWT1UZTGu2PazfC60uA1Oz
BIViA3R3GdR+mLMm2xStKYOi+SnDd4xEa8ngcVxkj8Gj0L1lEPGf4lAtC7S2
DDaY2tYLJuh+MlCvTfM8MBCtK4MW7VsJ1/qh9WRQ1avi6z+qXwbIwKS14W9M
V7ShDLKs1g6/14HP858MXIN66vIf0EYyUJUfsD/5EG0sg6suq2/2uY4eKoM6
JTePLxK0qQwOHz9qXZOANpdBlDi53GsNergM9sQnLuk9Bm0hg/pH7bz9D0xf
SxkUrA9Z50P1xWgZbEwc4RmwAT1WBrYnX1aFmqGtZHBlu1JIn6+YnybIYLf+
nMmzrqCtWXqprUp5moaeJINxR1c8f0LruZNlkLd67p6AeWiQwfmG14v0hqCn
ycDLcVTzhHYsLzNkcC37za3r19B2Mvitor5uYDTaXgaKd5YVlU1Ez5GBfKOG
2vcn2H7Ok8HB9e//XAlCO8hgyrowk7Xa6IUyMH6Rfte6DNtnJxkcn9c0KJ/W
AxfLYNT4unNPF6NdZHBo4y53BTpfs1QGnVfnTiqk8zeuMggw7796fiv2D9xl
sHyesrvBQ7QHS98fjS7dLtH6vwwmefPj9XNo/V8G2o4PMiR7af2fpefA0o2G
FP9qjQzCDxlP956NXicD79ULtXZR/KkNMujBex+NHo72kYFeg/Wdekv0Zhks
yvgRvpLibW2RQW+t3KnZc9D+Mqgc0pJYSPGwAmTQXXfI0h4UXyuIpYe8shB2
0fk/GeSPv5EamELn/2RQ3hjAFeejd7L8tbz5yeYn6FAZ7A0fq+zXnc7/yeC9
V/+a8ml0/k8GkRmhM57soPN/LL8+8y6vpfN1Uez7ln8xffyOzv/JYNbUkkZt
HUzPGBlEOy79Hj0NHSeDE6E2+5J96Pwfy1/tmqtc0un8nwwOmBy0/1xB5/9k
MOOBZ4SNAuanZBmE1DbXfZmETpXBB1vnF+G0fprO6qvM4quDZOjDMlhjbnlt
KNX/R2XwN2XMgjMd6CwZBPXb3RN60/o/e18/oP6UEa3/y2CB2eQEd9ofcZLl
T6nJb24Mrf/LoOe9Kd9KqD09I4PPYWOUXMejz8rAfXqWXsE4tJjlj3/fvi2m
9kUqA7/+Cn+e0//jZMCbxBrZqaIFGZhr5o0xfYHfN18GcRPupMny0QUyyGzP
vhWyH10og/vftpyrWIkuYvXVf5llefS+iln9t9Du7m8d9CUZLI6efj7oK77v
UvZ5nlHnv11Hl7H64ePMLk6p6KsyGPzDuHLucvR1GbyR/Sib3x9dIYPRYeKz
bTdo/Z+l5141/7Z1tP4vA6mbo7q7Aq3/s+f7YL5IKRXzY7UMUp5OXb9+FPoe
y2/Xf02ZVk/n/1h5sFl50Gsvnf+Twcio74HRE+n8nwyEPnzJ5284vnjEynvf
y+2DpOgnLH9UJo0Ztx79TAbFNlsv5dL623MZzH18+dE0it/0Ugbp9QamBnE0
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
NNCW9q9vEaDudMePCHp+P1aeFF7YetL6mr8A7+dtme5I62tbBWg5GrFthwc6
gKXXyqb9CTS/Hsh+P0ahvZ3SL4h9H88ecRtovWobq/8dpg6cTvPPwSw/HBvS
X6M75qftAhSN4zrXG6BDWP15onhI2nD0DgFyGoMUTG3QO9nf9/2bsWQOepcA
lyxWyJzd0KEC9C9xL9pE+T2MtfdPG99XRKN3C5BvnVEQfBK9hz2fFz9+YDk6
nOW3nHlNRo3oCAEe9Bkx5lArei+rvzUWRZ9RUvr/jhRg6ydx/mANdBT7fAft
4Yu10NEC1L7OjvrRB72Pta/LzglqOuj9AqTt1lfqq4eOEeCjyOviEgN0rADJ
07S+vvwPHcfqC8WJ8yON0fGsPrruve64CTpBAMOabed1zdAHBPhv7CWbUPp5
ogCPFeZkHR6EPijA6R1J2/71Qyex9mfMw845quhDAvzukfXw2098/mQBIP2r
WslrdIoA5pcWSCxq0amsv2IZMsac3mca6x9d715Tl49OF0DbOvZ20Wl0hgD3
P0bc6kX122HWnxD5Pv8Wjz4iwNp3j1cGhKGPCjCyS9a345vRmSy/RMy2XOWK
zmKf16Ag3zIVfUyAjLqyM/FG6GwBNL3m/ZjzF/PjcQHeSY8dnFyLzhFAZeF8
l11n0CdY/2pnL917e9AnBfCIlAxrWok+xcr7imrVUHt0Lnu/az/WXR2DPs3K
X7KGRS2td51h7f36tsljqfzlCSD0/1j/SAF9lqXfusDGCjqPIhJgthC8rrQI
LWb1dWZE9tpEtISVr9rA8Sc80FIB5umOeDN7CFrGnuec9cPp7+n8lQBXx73/
kZiP5gVIfHM9eCDFoxIEKJl7aXNrMFrO8rte6YFpFN8qX4CbxS8UktbS+r8A
vspLziaupvV/Ac4m1ioUrKH1fwEOL2g+GrURXSjAkMENt9QD0RcE6BFyf43f
XnQRe57A4MXlh9EXBWhM3ZSXXYguFsBnw/bWn0/RJaw+yI96d0ANn/cSqx9T
irw/T0BfZv33rMuFE9ajS1l7oDvTlktHXxFAcnLkKReqX8sEGK7YV3SO5qvL
Wf4x1a9K06b1fwGa955wjbek9X8Bwgu3Hrm5gNb/2fvc+Vkjx4/W/9nnV7uN
N06m9X/Wnzm/c0EnrTfeZPWTen588j1a/2f9peHwZNYnWv9n7Yevb8woJcy/
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
Oy7/HzCdTqA=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5000.}, {-2.2700666745605664`, 0.2956115517285889}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.785631983881936*^9, 3.785632013858626*^9}},
 CellLabel->
  "(Debug) Out[96]=",ExpressionUUID->"80af9e75-e650-4f83-b695-23a79cb7c37f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "can", "]"}]], "Input",
 CellChangeTimes->{{3.785631582107109*^9, 3.785631582378787*^9}, {
  3.78566542417173*^9, 3.785665432943555*^9}},
 CellLabel->
  "(Debug) In[46]:=",ExpressionUUID->"462971c3-314e-4ef3-8689-3453020f3704"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.785665433282012*^9, 3.785675439997301*^9, 
  3.785681231964695*^9},
 CellLabel->
  "(Debug) Out[46]=",ExpressionUUID->"b8db4753-fc9d-4da6-aaaa-9cf44f47d298"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["can"], "Input",
 CellChangeTimes->{{3.785675477832163*^9, 3.7856754780550413`*^9}},
 CellLabel->
  "(Debug) In[396]:=",ExpressionUUID->"b639940f-f55f-4b24-8517-31fd21cd2eb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.29367102895867364`", ",", "0.9288325653425891`", ",", 
     "1.369888700939799`", ",", "0.018231594142374945`", ",", 
     RowBox[{"-", "0.30256836720226676`"}], ",", 
     RowBox[{"-", "0.3942133674371924`"}], ",", "1.1639442308838834`", ",", 
     "1.9312077676923662`", ",", 
     RowBox[{"-", "1.9373497815170042`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.23584658674089232`", ",", "0.679004131533991`", ",", 
     "1.2100425670139476`", ",", "0.011800274664256455`", ",", 
     RowBox[{"-", "0.03171603894287767`"}], ",", "1.8456568973911365`", ",", 
     RowBox[{"-", "0.03844465788223328`"}], ",", 
     RowBox[{"-", "0.4880933597616455`"}], ",", "1.2380205880736659`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.33620072123136985`", ",", "0.9784768622871829`", ",", 
     "1.3362026669206954`", ",", "0.01915587276172892`", ",", 
     RowBox[{"-", "0.052584926276106`"}], ",", "1.5804797744025834`", ",", 
     RowBox[{"-", "1.3826802942636878`"}], ",", "1.8329448600707758`", ",", 
     RowBox[{"-", "0.41156817912519283`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.26329645527934303`", ",", "0.872671006173884`", ",", 
     "1.0610216371146854`", ",", "0.010820156960029465`", ",", 
     "0.2946144246550233`", ",", 
     RowBox[{"-", "1.2869339757726612`"}], ",", 
     RowBox[{"-", "0.6065918847390375`"}], ",", "1.9061943134282808`", ",", 
     "1.692439409921902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3955377991357187`", ",", "0.8117141824961369`", ",", 
     "1.7454539725520943`", ",", "0.016377512364301842`", ",", 
     RowBox[{"-", "0.7343222343360853`"}], ",", 
     RowBox[{"-", "1.0626121756402709`"}], ",", 
     RowBox[{"-", "1.2689979123956938`"}], ",", 
     RowBox[{"-", "1.0564968748792776`"}], ",", "1.9107394730275091`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.35079459227164256`", ",", "0.7288916871642914`", ",", 
     "1.201021502878861`", ",", "0.028576603835967957`", ",", 
     RowBox[{"-", "1.3118862041818309`"}], ",", "1.477198162440299`", ",", 
     RowBox[{"-", "0.14445345449221136`"}], ",", 
     RowBox[{"-", "0.6974973889334448`"}], ",", 
     RowBox[{"-", "0.15724402433327`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.23828774955260604`", ",", "0.5904659076849614`", ",", 
     "0.9831130697525519`", ",", "0.009614498378081579`", ",", 
     RowBox[{"-", "0.6226784765781046`"}], ",", 
     RowBox[{"-", "0.6687067512194833`"}], ",", "1.6180733114464978`", ",", 
     RowBox[{"-", "1.8348283175354307`"}], ",", "1.9594983362075107`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.23166797127347427`", ",", "0.675993668456516`", ",", 
     "1.5596131768559935`", ",", "0.008712339654346047`", ",", 
     "0.001297095392889247`", ",", "1.6912837270185488`", ",", 
     "0.8279065631848681`", ",", "1.0670971233873656`", ",", 
     RowBox[{"-", "1.862698379679082`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3689013159681943`", ",", "0.8662173989876714`", ",", 
     "1.1905697262769297`", ",", "0.03430281645367169`", ",", 
     RowBox[{"-", "1.3369466582556493`"}], ",", 
     RowBox[{"-", "1.8595415536805522`"}], ",", 
     RowBox[{"-", "0.8594718753528481`"}], ",", "1.3768215114156126`", ",", 
     RowBox[{"-", "1.3904044489099299`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3091596337785798`", ",", "0.4824882448114004`", ",", 
     "0.9273660647656055`", ",", "0.028973047030607754`", ",", 
     "0.49858474378585793`", ",", "0.08469477982434093`", ",", 
     RowBox[{"-", "1.6749121412599894`"}], ",", "0.737835186316282`", ",", 
     RowBox[{"-", "0.9499966365017105`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2132185511093089`", ",", "0.6126606571577533`", ",", 
     "0.9704789231082194`", ",", "0.012478831831361696`", ",", 
     "0.4330867517597339`", ",", 
     RowBox[{"-", "1.5910101039184328`"}], ",", 
     RowBox[{"-", "0.8805244092762594`"}], ",", 
     RowBox[{"-", "0.06558036884845198`"}], ",", "1.2743519246477497`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.39493230081563846`", ",", "0.7765779768580704`", ",", 
     "1.9278544490568716`", ",", "0.015427614429840817`", ",", 
     "1.548758870015499`", ",", 
     RowBox[{"-", "0.23187430165828005`"}], ",", 
     RowBox[{"-", "0.007161749850935983`"}], ",", 
     RowBox[{"-", "0.2031889354781624`"}], ",", "0.8046167527627768`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.364465608650133`", ",", "0.8336875738211282`", ",", 
     "1.619614616863283`", ",", "0.021653121782132148`", ",", 
     "0.7500504566740327`", ",", "1.6904346582752767`", ",", 
     RowBox[{"-", "1.3721584923821135`"}], ",", "1.7540090016720074`", ",", 
     RowBox[{"-", "1.4714813194752825`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.29244428932232464`", ",", "0.8159231048960778`", ",", 
     "1.077709334183273`", ",", "0.025218529298786704`", ",", 
     "0.900401435853099`", ",", "1.4238214632838657`", ",", 
     RowBox[{"-", "1.8471070300303412`"}], ",", "1.4043602689875634`", ",", 
     RowBox[{"-", "1.6319117399304854`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3631830914130716`", ",", "0.789092967583775`", ",", 
     "1.4433373543787709`", ",", "0.019135282667938742`", ",", 
     "0.28505820892053`", ",", 
     RowBox[{"-", "0.7129138999578482`"}], ",", 
     RowBox[{"-", "1.3977795764284968`"}], ",", "1.6103055372755488`", ",", 
     "0.6514409239334853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.39123139445520416`", ",", "0.8409765828065303`", ",", 
     "1.4842075262937553`", ",", "0.03809065267419253`", ",", 
     RowBox[{"-", "0.5516877495961552`"}], ",", 
     RowBox[{"-", "0.9718188974920743`"}], ",", 
     RowBox[{"-", "1.7431282610188399`"}], ",", 
     RowBox[{"-", "1.3113294862463727`"}], ",", "1.3267784385878354`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.28770809836420974`", ",", "0.8244544350119332`", ",", 
     "1.1749390154600263`", ",", "0.024891336311942822`", ",", 
     "0.3760150277348586`", ",", 
     RowBox[{"-", "1.0113746024807142`"}], ",", 
     RowBox[{"-", "0.7812494343192169`"}], ",", "1.9079714152884417`", ",", 
     "1.3630380012173093`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.27930615640536893`", ",", "0.7496982721711638`", ",", 
     "1.180663175181835`", ",", "0.011094904859283106`", ",", 
     "0.4626248405271767`", ",", 
     RowBox[{"-", "0.060143818284089434`"}], ",", 
     RowBox[{"-", "1.7359527382201607`"}], ",", 
     RowBox[{"-", "1.9112794197731517`"}], ",", "1.6883334532713485`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3793844038070816`", ",", "0.9655595593570412`", ",", 
     "1.3161009062699747`", ",", "0.02554471465419009`", ",", 
     RowBox[{"-", "0.40409049901545835`"}], ",", 
     RowBox[{"-", "0.8981286195548499`"}], ",", "0.842031896645711`", ",", 
     RowBox[{"-", "0.599410920290782`"}], ",", 
     RowBox[{"-", "1.9896003558943525`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2887708738365355`", ",", "0.7539597356445156`", ",", 
     "1.0604379224150635`", ",", "0.010363306675291898`", ",", 
     "0.4383646532230392`", ",", 
     RowBox[{"-", "1.8783032163745599`"}], ",", "0.10713264840128911`", ",", 
     RowBox[{"-", "0.6728300453696674`"}], ",", 
     RowBox[{"-", "1.7873442438297529`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2583743817311284`", ",", "0.9881952345446718`", ",", 
     "1.1499449228625607`", ",", "0.025188375447402333`", ",", 
     RowBox[{"-", "0.2390159655807489`"}], ",", "1.6734569167680755`", ",", 
     RowBox[{"-", "0.1373835816165201`"}], ",", 
     RowBox[{"-", "1.4248052275517917`"}], ",", 
     RowBox[{"-", "0.9619225633500887`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.22041997058707807`", ",", "0.6171448233720194`", ",", 
     "1.6679919049444871`", ",", "0.009482500224775474`", ",", 
     RowBox[{"-", "1.0445954807341336`"}], ",", "1.5882517580464146`", ",", 
     "1.2250087944776613`", ",", "1.3429149278200425`", ",", 
     "1.9478435250895005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2693179212557943`", ",", "0.7125182835679575`", ",", 
     "1.0737657649091683`", ",", "0.010222642302482153`", ",", 
     RowBox[{"-", "0.5080080795950659`"}], ",", 
     RowBox[{"-", "1.4140013155338131`"}], ",", "0.6137378116377263`", ",", 
     RowBox[{"-", "1.6126648023871253`"}], ",", "1.7882468623435912`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2799747750890534`", ",", "0.6660473715586022`", ",", 
     "1.8261718599461751`", ",", "0.013481624686133682`", ",", 
     RowBox[{"-", "0.4361445299472262`"}], ",", "0.9662831915520842`", ",", 
     RowBox[{"-", "1.9100027253355565`"}], ",", "1.5117787015947997`", ",", 
     "0.7854473446376602`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.218675003757526`", ",", "0.6919967758926266`", ",", 
     "1.6900442176506822`", ",", "0.010215221949361095`", ",", 
     "0.11899710185666557`", ",", "1.3284110913153526`", ",", 
     RowBox[{"-", "0.23411816836981458`"}], ",", 
     RowBox[{"-", "1.2606792764842893`"}], ",", "0.1489244911935419`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.22052705470962808`", ",", "0.8423361454074443`", ",", 
     "1.1554444772791908`", ",", "0.014342544362642068`", ",", 
     RowBox[{"-", "0.5125058731933114`"}], ",", "0.8194883304254645`", ",", 
     RowBox[{"-", "1.3253285345247692`"}], ",", 
     RowBox[{"-", "1.2653677350319201`"}], ",", 
     RowBox[{"-", "1.9868366564199`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3112946369370387`", ",", "0.9372455941207027`", ",", 
     "1.988256329975254`", ",", "0.020998289579187646`", ",", 
     RowBox[{"-", "0.39726011632767566`"}], ",", 
     RowBox[{"-", "1.5004051747407123`"}], ",", "0.9939487668576783`", ",", 
     "1.4434008889032564`", ",", 
     RowBox[{"-", "1.7966261068211802`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.20872972067070905`", ",", "0.5719275893818097`", ",", 
     "1.3752670514960936`", ",", "0.011254263324811511`", ",", 
     "0.6816795187719338`", ",", "1.4345051659144383`", ",", 
     "0.2756931908180471`", ",", 
     RowBox[{"-", "1.8888340378786852`"}], ",", "0.9419681647110787`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2880457123395558`", ",", "0.4361578193296066`", ",", 
     "1.8802283458098872`", ",", "0.014193071158885913`", ",", 
     RowBox[{"-", "0.7706046418786103`"}], ",", "1.1746380148200348`", ",", 
     RowBox[{"-", "0.6762217971395446`"}], ",", 
     RowBox[{"-", "1.02697045270419`"}], ",", 
     RowBox[{"-", "1.7337982721693042`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3064074884030691`", ",", "0.7588857201082784`", ",", 
     "1.3880641142367156`", ",", "0.021642742572411795`", ",", 
     "0.5186661428949169`", ",", "1.8345605718897495`", ",", 
     "0.9883129198628371`", ",", 
     RowBox[{"-", "0.4426307913364411`"}], ",", "1.9626769220618794`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.28949465464204643`", ",", "0.7526163689618417`", ",", 
     "1.5294263160266204`", ",", "0.01522904658720042`", ",", 
     "0.05748448673086948`", ",", "1.7568457379049178`", ",", 
     RowBox[{"-", "0.11670294237206846`"}], ",", "0.38298802301792634`", ",", 
     "1.6649154948291915`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3238429263469967`", ",", "0.5876076080991395`", ",", 
     "1.5054162113947727`", ",", "0.01985649997103943`", ",", 
     RowBox[{"-", "0.09699804216697583`"}], ",", 
     RowBox[{"-", "0.4678850475986591`"}], ",", "0.6654478247436115`", ",", 
     "0.9269957097215489`", ",", 
     RowBox[{"-", "0.3837648344791891`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.376516453967764`", ",", "0.6077372355652264`", ",", 
     "0.8728752599574578`", ",", "0.020709700874261047`", ",", 
     RowBox[{"-", "1.9039203543780792`"}], ",", 
     RowBox[{"-", "1.0548248839359164`"}], ",", "1.555230707573175`", ",", 
     RowBox[{"-", "0.40216140201565587`"}], ",", 
     RowBox[{"-", "0.16054003005118833`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.36022011660657727`", ",", "0.9590448968139893`", ",", 
     "1.048415660274778`", ",", "0.012473918281814347`", ",", 
     "0.5871528951382698`", ",", 
     RowBox[{"-", "1.5173928305147504`"}], ",", 
     RowBox[{"-", "0.43741801911710443`"}], ",", 
     RowBox[{"-", "0.4080995920425545`"}], ",", "0.8231274309267809`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3356493837819574`", ",", "0.8001215402178985`", ",", 
     "1.9333297177055382`", ",", "0.02002076119724252`", ",", 
     RowBox[{"-", "1.309441573864091`"}], ",", 
     RowBox[{"-", "1.9423715817480307`"}], ",", 
     RowBox[{"-", "1.7413660613506217`"}], ",", "1.8423189443543881`", ",", 
     RowBox[{"-", "1.8720972367283606`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.39311847540707173`", ",", "0.7385447566120238`", ",", 
     "1.0704756778740554`", ",", "0.01889220380396202`", ",", 
     "0.795923534974909`", ",", 
     RowBox[{"-", "0.4951958386675388`"}], ",", "0.22614774914747748`", ",", 
     RowBox[{"-", "0.7909452195401112`"}], ",", "0.4136779769983008`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.22872562558307657`", ",", "0.6043588891674827`", ",", 
     "1.7043856680115557`", ",", "0.01324038768746723`", ",", 
     RowBox[{"-", "0.5900082271963392`"}], ",", "1.6908331541215453`", ",", 
     RowBox[{"-", "0.3248939705669116`"}], ",", "1.2352178961027764`", ",", 
     "1.6531395301189313`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.785675478437522*^9},
 CellLabel->
  "(Debug) Out[396]=",ExpressionUUID->"51ac481b-88ee-496e-9a4f-15694295a13e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.785631508346609*^9, 3.785631518096924*^9}, 
   3.785631575921558*^9},ExpressionUUID->"ea9dafc7-234d-4bfa-8aa6-\
65c4951db91b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s", ",", "s"}], "}"}]], "Output",
 CellChangeTimes->{3.78563151851482*^9},
 CellLabel->
  "(Debug) Out[32]=",ExpressionUUID->"3816d718-a56b-4bea-8144-5be77e96090d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<can.csv\>\"", ",", "can"}], "]"}]], "Input",
 CellChangeTimes->{{3.785665442426783*^9, 3.7856654602866096`*^9}},
 CellLabel->
  "(Debug) In[55]:=",ExpressionUUID->"e6d84bd7-b957-4dc1-af06-3896c602d4b6"],

Cell[BoxData["\<\"can.csv\"\>"], "Output",
 CellChangeTimes->{3.785665460976663*^9},
 CellLabel->
  "(Debug) Out[55]=",ExpressionUUID->"b2a10075-1e02-4de0-aa01-9d6a7650f68e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
  "0.22330750556920723`", ",", "0.8643009735502367`", ",", 
   "1.8595145024685116`", ",", "0.007884037066915416`", ",", 
   "0.5488351722004445`", ",", "1.4713052459131095`", ",", 
   RowBox[{"-", "0.718568322512021`"}], ",", "1.9621859943316782`", ",", 
   RowBox[{"-", "1.224792308422301`"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "0.2477745963909214`", ",", "0.6612842912088941`", ",", 
   "1.8357372323735794`", ",", "0.017283236066773556`", ",", 
   RowBox[{"-", "0.03405976406370126`"}], ",", "1.7463380230395433`", ",", 
   "0.11593836637793853`", ",", 
   RowBox[{"-", "0.7499406232559771`"}], ",", "1.6651813719458097`"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "0.26609327792084664`", ",", "0.641772514040313`", ",", 
   "1.7930721767342677`", ",", "0.012675283731216475`", ",", 
   RowBox[{"-", "1.1363480596577622`"}], ",", "1.981379071098937`", ",", 
   "0.28557464294617674`", ",", "1.285838747599822`", ",", 
   "1.696533416996953`"}], "}"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.7856812508371363`*^9, {3.7856813025070047`*^9, 
   3.785681329225484*^9}},ExpressionUUID->"d26d911a-ab34-4646-98fd-\
584c7e97dabb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"para", "=", 
  RowBox[{"can", "[", 
   RowBox[{"[", "25", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{"roller", "[", "para", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{"rollerflat", "[", "para", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "/.", 
        RowBox[{"sol1", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], "/.", 
        RowBox[{"sol1", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"AbsoluteThickness", "[", "0.9", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "/.", 
        RowBox[{"sol2", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], "/.", 
        RowBox[{"sol2", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", 
        RowBox[{"AbsoluteThickness", "[", "0.9", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{"20", " ", "Degree"}], "]"}], "x"}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cot", "[", 
          RowBox[{"20", " ", "Degree"}], "]"}]}], "x"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Black"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Black"}], "}"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQfaHOW7bA5I1jWeZ8MB2W7K1SCaSzLj1UA9Gf5841
A9Gf9l4yB9FP328qB9Fbl14G0x86775vAdJC1l/+g+gFUx4otwLpuMZXaiC6
/0PPHRBttMj1EYj2njgjoQ1I123RTgTRd+9+6QTRrn1GM0F0DeNr3naQOyxn
CIDoW4XCR0G0/tKfZ0B0Z/XqmR1AuvV18VoQveHWtM0g+oVxwG4QvdNM/RCI
btw/8ziI/hf8+FQnkGa5VXodRO/79TN3Ksic+0uKQbTJ04Jz04C0L3PvCxD9
a8WFWTOA9LfLBbNBtIhXUdBMIL1FRykeRAvXTwyfBaSLpnamg2jWjjWVIDp+
S0A7iL4UIaY6F0g/ufVUHUS/t3ygC6K3XuKxBdEr92W4gGiWFQoeIBoAWtPF
1Q==
  "],
 CellLabel->
  "(Debug) In[135]:=",ExpressionUUID->"fedea07d-a557-4e0d-af01-915878b55a23"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"25\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0.30319875572947724`\\\", \\\",\\\", \
\\\"0.7238962054026385`\\\", \\\",\\\", \\\"0.9065240126775513`\\\", \
\\\",\\\", \\\"0.01832796064284449`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.08909099800685016`\\\"}], \\\",\\\", \\\"1.8887544069116418`\\\", \\\",\
\\\", \\\"1.0747194578678068`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.035142420239663`\\\"}], \\\",\\\", \\\"0.1090327036207892`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.24837931852643652`\\\", \
\\\",\\\", \\\"0.7880748900826635`\\\", \\\",\\\", \
\\\"0.829196254836913`\\\", \\\",\\\", \\\"0.02357055002221707`\\\", \
\\\",\\\", \\\"1.0628878466434752`\\\", \\\",\\\", \
\\\"1.8951617662667957`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.15970263647096772`\\\"}], \\\",\\\", \\\"1.396297563339254`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.977466872778125`\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.37972691539650893`\\\", \\\",\\\", \\\"0.9878864032553543`\\\", \
\\\",\\\", \\\"1.1416102166640612`\\\", \\\",\\\", \\\"0.02011702087622064`\\\
\", \\\",\\\", \\\"0.27877510785752513`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\
\"0.9361064857990931`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.2346462529400863`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.9398716457959608`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.2799063092670382`\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\) does not \
exist.\"",2,135,1,17482086957766928164,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.785681473575204*^9},
 CellLabel->
  "(Debug) During evaluation of \
In[135]:=",ExpressionUUID->"3577e86c-0baa-4369-87b0-795be7d0bde3"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"0.30319875572947724`\\\", \\\",\\\", \
\\\"0.7238962054026385`\\\", \\\",\\\", \\\"0.9065240126775513`\\\", \
\\\",\\\", \\\"0.01832796064284449`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.08909099800685016`\\\"}], \\\",\\\", \\\"1.8887544069116418`\\\", \\\",\
\\\", \\\"1.0747194578678068`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.035142420239663`\\\"}], \\\",\\\", \\\"0.1090327036207892`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.24837931852643652`\\\", \
\\\",\\\", \\\"0.7880748900826635`\\\", \\\",\\\", \
\\\"0.829196254836913`\\\", \\\",\\\", \\\"0.02357055002221707`\\\", \
\\\",\\\", \\\"1.0628878466434752`\\\", \\\",\\\", \
\\\"1.8951617662667957`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.15970263647096772`\\\"}], \\\",\\\", \\\"1.396297563339254`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.977466872778125`\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.37972691539650893`\\\", \\\",\\\", \\\"0.9878864032553543`\\\", \
\\\",\\\", \\\"1.1416102166640612`\\\", \\\",\\\", \\\"0.02011702087622064`\\\
\", \\\",\\\", \\\"0.27877510785752513`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\
\"0.9361064857990931`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.2346462529400863`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.9398716457959608`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.2799063092670382`\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", \\\"25\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,138,2,17482086957766928164,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.785681473660954*^9},
 CellLabel->
  "(Debug) During evaluation of \
In[135]:=",ExpressionUUID->"41b06773-56c0-4e72-b5ff-1acaeddccecc"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"0.30319875572947724`\\\", \\\",\\\", \
\\\"0.7238962054026385`\\\", \\\",\\\", \\\"0.9065240126775513`\\\", \
\\\",\\\", \\\"0.01832796064284449`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.08909099800685016`\\\"}], \\\",\\\", \\\"1.8887544069116418`\\\", \\\",\
\\\", \\\"1.0747194578678068`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.035142420239663`\\\"}], \\\",\\\", \\\"0.1090327036207892`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.24837931852643652`\\\", \
\\\",\\\", \\\"0.7880748900826635`\\\", \\\",\\\", \
\\\"0.829196254836913`\\\", \\\",\\\", \\\"0.02357055002221707`\\\", \
\\\",\\\", \\\"1.0628878466434752`\\\", \\\",\\\", \
\\\"1.8951617662667957`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.15970263647096772`\\\"}], \\\",\\\", \\\"1.396297563339254`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.977466872778125`\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.37972691539650893`\\\", \\\",\\\", \\\"0.9878864032553543`\\\", \
\\\",\\\", \\\"1.1416102166640612`\\\", \\\",\\\", \\\"0.02011702087622064`\\\
\", \\\",\\\", \\\"0.27877510785752513`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\
\"0.9361064857990931`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.2346462529400863`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.9398716457959608`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.2799063092670382`\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", \\\"25\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,138,3,17482086957766928164,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.785681473675434*^9},
 CellLabel->
  "(Debug) During evaluation of \
In[135]:=",ExpressionUUID->"39ee7b44-97b0-409b-8232-2f8f0264de14"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"0.30319875572947724`\\\", \\\",\\\", \
\\\"0.7238962054026385`\\\", \\\",\\\", \\\"0.9065240126775513`\\\", \
\\\",\\\", \\\"0.01832796064284449`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.08909099800685016`\\\"}], \\\",\\\", \\\"1.8887544069116418`\\\", \\\",\
\\\", \\\"1.0747194578678068`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.035142420239663`\\\"}], \\\",\\\", \\\"0.1090327036207892`\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.24837931852643652`\\\", \
\\\",\\\", \\\"0.7880748900826635`\\\", \\\",\\\", \
\\\"0.829196254836913`\\\", \\\",\\\", \\\"0.02357055002221707`\\\", \
\\\",\\\", \\\"1.0628878466434752`\\\", \\\",\\\", \
\\\"1.8951617662667957`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.15970263647096772`\\\"}], \\\",\\\", \\\"1.396297563339254`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"1.977466872778125`\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"0.37972691539650893`\\\", \\\",\\\", \\\"0.9878864032553543`\\\", \
\\\",\\\", \\\"1.1416102166640612`\\\", \\\",\\\", \\\"0.02011702087622064`\\\
\", \\\",\\\", \\\"0.27877510785752513`\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\
\"0.9361064857990931`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.2346462529400863`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"1.9398716457959608`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.2799063092670382`\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", \\\"25\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"",2,138,4,17482086957766928164,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.785681473716009*^9},
 CellLabel->
  "(Debug) During evaluation of \
In[135]:=",ExpressionUUID->"32a4cead-efbf-4e4e-af9b-27170208f35a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,138,5,17482086957766928164,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.785681473722364*^9},
 CellLabel->
  "(Debug) During evaluation of \
In[135]:=",ExpressionUUID->"f73d066f-629c-47c9-8c87-6aecc20c50c0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {{}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtlH081HccwA+RYs5xFycPd/ddzM15fsjvp9d9xHW3ecjYsaXJdGKoU9Ey
Ml6UsloeuuThWpGTWWkVWlvdt1hKZXrw0BjV5eE6lTxPZO316o/36/3f+883
O0YaGqtNoVCC3vG/9wwHjS8uIvyaueVyfhqJh9JXTPXOI2xX/MCXSCVxsPHA
TNO/CEca+t5SJ5OY5Z28IJ1A+ObblT2ieBJfzy/SfzyEsFx1b0ovgsT6jt3W
+C7CAWfWuOS4k/hISnRAVjnCCmCcTn9F4DqtnacoXu96cS2ypFgC68YKXZlf
cfDZI00X6YQ3Nu35M6mykI2jWlPNijmrcWhz2Wb7Nhb2E601PWTshdNfrUkq
UNlgWm1VaNCwB770bVlC/XprTFA7OlX33HFwkZj1ttQSB4kLK6DaDQvlV4JF
oxb4qDp63jzTFSta07p2RjKxd86bn1oTXHBU7hHGX6fNcOs8N88HnHFmtM5Z
A9MVOHrmUwk1zBFTeDZKv710fLxw42iFswP++4fSvLpOE3xGU/KmccAeWy6P
r51cS8OpId8U7Wm0w4keXN1eSyo2SpWc64hahTd79Z9ubjbAJp4ZlJUmCHN3
E4vbTunjdi1uD+0FC5/8J6wlzVcXN1nobOO6WeHhbIaP0FwbrxX2E/m95viy
7CPBSPiCcvuE4QodOzp2Vj+adJJPKzXn1D8/NKZi/8u9yxbCx5Sd1TSReIce
Tq6tn6WZqpQG7td0jN3nlOFb0Mn7GbeUXz6zjr+Q/UTZeudRvlvYTX59z3eM
dQ2P+QTv2vmQEhU/JNCn4Hf1HF97F6NPwhzj+yXuHW2y0oOlhiHZMS+n+ea/
CiY3ZVEh53GX346qBf6J67dKZZF0OFe+LyRzXAv8S/y5lTXmIK2UGD8L14V1
o4m/yEKsICqhzCovWx80sgtU804WHPhsl7dbhQGISulmL6c5sIQuG/p+zgge
9gWUeAlXQfftvWO5VBrUMF4cfii1A3F6jGdZswnU/ijRGrxhD0kGGk77BjpM
zgs0oumPwabuxlG95wy41768qsHCEdIv+YVRy81AOnZf3ebpDMmKpEZPJyZY
pIivSgJdwFDbK8Zx0AL6zPzWr05zBcHWz2XcYkuI38oRFpxwA/PfrKSCD63h
2BXPN7SL7lC0Y3+hc7cNDPAaE+/2e0DovvU8eSML2o4lHDs/5QncyFzxqT1s
yGowdrBcuhq6hpZVFos5EDjOzlA6eUN7zKCviQ2CK/bx+w/6E/BkSc2sjIMg
k+2cHf0JAZOK+HqmLQI+czbNPZgApkZjyeYhwPr7E/siCJDsHJ9xIhG0DNcE
OyQSMJezeCYoAkFb9TD9TiEBttVMiwOHEXSz404aDBDgLeztMCxGUMp0KhtQ
ERCorsgrOIpgA22m6MIIAdt5rKkSOYJeSl5u5DgBfzTYdijqEPQPKOLqdEkI
veG2r6UVwaB8iBfgQEJs/JSP6DYCheysrY0LCbuXN03cbkcQd2iXzYQHCfJg
4usHnQhGMvRo5XwSRrrA56kKgSbSdvJ5KAlzu7UnYocR1IW9HL0aQcIHK1tq
1c8RJAU0DhZtJMF1k9Ds9WsEL4h13cQWEgRay9pTphDUuxp1GCWS8EVVW+7s
LIJkbtfNp1ISEgQHyYx5BM6c49caU0h4/y94/y/4D1ZVMz4=
        "]]},
      Annotation[#, "Charting`Private`Tag$78889#1"]& ], 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtlHs41XccgF0ixRyHc+LI5TjfxZy5X/P76TkfcTo2l4xhS5OJGIqKlpHx
UMpquXSSy2lFjsxKq9Da6nyKpVSmi0tjVHI5HZXcJ7L2PP3xPu9/75+vWWRi
YLSKkpKS3zv+955hv/HFRYKvOVsu56XSMJS2YqpnnqBF0QMPKoUGf53+mcZ/
CYZpedySJ9HAdUtaSJwgePPtym7vWBqu5xVqPB4iKBm4N6UeSoOGTZcJ3iXo
c2aNfbYTDUeSI3wyywhKgX067RUFtco7Tym5vuvFNIsToilQixY5cL7i4dkj
jRdZlBvodf+ZUFFghuEtKfpFvNUQ2FS62bKVi57ea/UO6bhC2qs1CfkDpsis
qQz0G3aGS9+WxtWtN0GK0d4xcM8J/AuDuW9LjNAvuKAcqhxBJLni7z1qiEfl
EfMGGQ4gbUnt3BnGQbfsNz+1xNlDeM4R9l+n9bFlnp/rDnaQEaF6VlNvBUbM
fBrFCLIBJWtTmedeFh4v2DhabmcFf/9QklvboYtnFMVvGvotwWh5bM3kWiam
BHxTuKfBAuKd+Wo9RgzUTok61x6+Cja79p1uatJEXZd0pZW6BPi7qcVtpzSw
TZnfzXzBhZP/BDWneqhho6HqNr6jMQxnsd1FBiq4VtRH5fUYwGXxR8KRkAXZ
9gmtFaoWLLCTP5q0lUzLFOfkPz/UYYDX5Z5lCyFjso4qpnfwDnVIqqmbZeoN
yDSdrqnqOM0JQraQk/fTb8m+fGYSeyHriaDlzqM8x6Cbgrru79jr6h/LKOtr
5wOKBwQBvu75v8vnZCq72L1RnDGBZ/ze0UZjdVyqFZAV+XJaYPCrcHJTJgOz
H3d67qhcEJy4fqtEHMbCc2X7AjLGlcGr2ItfUW2AiRVROs9C1GDdaPwv4gBj
DI8rNc7N0gCF+ALDoIOLBz7b5eZYrgneJSz9l9M8XMISD30/pw0Pe32KXUWr
sOv23rEcBhOq2S8OP0y0wOC0SJfSJl2o+TFKefCGJSZoKnhtG1gwOS9UeE9/
jKa1N46qP2fDvbbllfWGNph2yTOIUaYPiWP35a0udpgkTWhwseWAYXLw1Shf
e9RScY20GTSEXn3P9atTHVC49XMxv8gIYrfyRPknHNHgN+NE4YcmcOyKyxvm
RScs3LG/wK7LFPqtG+Lv9jlj4L711pIGLrQeizt2fsoF+WE5waf2mEFmvY6V
0dLV2Dm0rKIomAe+42bpMls3bIsc9NA1JXDFMnb/QS8KnyypnhXzCGSY2WVF
fELhpDS2jmNOQMCZTXXyp5CjUBiZWRNAjf3xvaEURu0cn7GlCTQPV/tbxVM4
l714xi+UQGvVMOtOAYXmVRzDA4cJdJnFnNTsp9BN1NOuVUSghGNb2j9Aoa+8
PDf/KIENzJnCCyMUbrfmThVLCPQo5eaEjVP4R715u7SWQF+/NKZWjcbAG477
mlsIDEqGrH2saIyOnXL3vk1AKj5rbmpP4+7ljRO32wjEHNplOuFMo8Sf+vpB
B4GRdHVmmYDGkU5wfzpAQBFmPvk8kMa53SoT0cMEaoNejl4NpfGDlc018ucE
EnwaBgs30uiwSaT/+jWBF9S6LmoLjULlZW3JUwTqHLTbteNp/KKyNWd2lkAS
v/Pm00Qa44QH6fR5Ana849cakml8/y94/y/8D5xAOr4=
        "]]},
      Annotation[#, "Charting`Private`Tag$78889#2"]& ]}, {}}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.785605569875834*^9, 3.785605694477364*^9, {3.78560577127493*^9, 
   3.785605787814206*^9}, 3.785605843263858*^9, 3.7856059008987637`*^9, {
   3.7856060387989883`*^9, 3.78560610265266*^9}, {3.785606797710384*^9, 
   3.785606834351405*^9}, {3.785607600525419*^9, 3.785607615362191*^9}, {
   3.78560778170442*^9, 3.7856077930411654`*^9}, 3.7856078489912767`*^9, {
   3.7856081104417963`*^9, 3.785608127311791*^9}, 3.7856085141185093`*^9, 
   3.7856086138461037`*^9, 3.785608900768237*^9, {3.785631635507815*^9, 
   3.785631642414119*^9}, {3.78563168522528*^9, 3.785631745140223*^9}, {
   3.7856319687083263`*^9, 3.785631996107236*^9}, {3.7856320326411867`*^9, 
   3.785632057279984*^9}, 3.78563279381325*^9, {3.785633505839881*^9, 
   3.785633556060444*^9}, {3.785634566599021*^9, 3.785634570999599*^9}, {
   3.785634897676991*^9, 3.785635018036396*^9}, {3.7856359519321213`*^9, 
   3.785635973316107*^9}, {3.785637417285901*^9, 3.785637480118752*^9}, {
   3.785639118150703*^9, 3.785639125729095*^9}, {3.785639155773614*^9, 
   3.7856392759642887`*^9}, {3.785639325365631*^9, 3.785639387178817*^9}, {
   3.785639437677725*^9, 3.785639485234807*^9}, {3.7856415610826187`*^9, 
   3.785641660007648*^9}, {3.785665392925672*^9, 3.785665437621286*^9}, {
   3.785668212280167*^9, 3.785668420787385*^9}, {3.785671895761608*^9, 
   3.7856718999708433`*^9}, {3.785672300389544*^9, 3.7856723336950808`*^9}, {
   3.785673349493895*^9, 3.78567346660574*^9}, {3.785675453086843*^9, 
   3.785675488002153*^9}, {3.7856755180847473`*^9, 3.7856755809005213`*^9}, {
   3.7856756339896803`*^9, 3.785675682870229*^9}, {3.785675725893434*^9, 
   3.7856758348384047`*^9}, {3.785681194130662*^9, 3.785681215645719*^9}, {
   3.785681264029449*^9, 3.78568138479457*^9}, {3.785681445060329*^9, 
   3.785681473803672*^9}},
 CellLabel->
  "(Debug) Out[138]=",ExpressionUUID->"53a5156b-8b80-44ea-ab74-f99089e267f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pick", "[", 
  RowBox[{
   RowBox[{"can", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "0"}], "}"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.785634812734099*^9, 3.785634826641521*^9}, {
  3.785634860138156*^9, 3.785634862048011*^9}},
 CellLabel->
  "(Debug) In[185]:=",ExpressionUUID->"db259982-8d4c-4d27-8b4b-24ee8e3efe48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.11483882912405385`", ",", "0.5471979621326171`", ",", 
   "0.7040850489372348`", ",", 
   RowBox[{"-", "0.3177383557223572`"}], ",", "0.041422064896301514`", ",", 
   "0.1442930040566539`"}], "}"}]], "Output",
 CellChangeTimes->{{3.785634809169311*^9, 3.78563482828024*^9}, 
   3.7856348625699787`*^9},
 CellLabel->
  "(Debug) Out[185]=",ExpressionUUID->"c0721798-368a-4142-85fd-4bca4a1bf08e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"can", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.785634748225615*^9, 3.785634750720804*^9}},
 CellLabel->
  "(Debug) In[181]:=",ExpressionUUID->"d3758e6c-e9f5-4406-a834-1801b29577a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.11483882912405385`", ",", "0.5471979621326171`", ",", 
   "0.7040850489372348`"}], "}"}]], "Output",
 CellChangeTimes->{3.785634751270801*^9},
 CellLabel->
  "(Debug) Out[181]=",ExpressionUUID->"7d2faf59-9b58-4c45-b0bd-7caffa7262a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zfield", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "A1_", ",", 
      "A2_", ",", "A3_"}], "}"}], ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"A1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Omega]1", " ", "t"}], " ", "]"}]}], "+", 
   RowBox[{"A2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Omega]2", " ", "t"}], " ", "]"}]}], "+", 
   RowBox[{"A3", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Omega]3", " ", "t"}], " ", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"zfield", "[", 
    RowBox[{
     RowBox[{"Pick", "[", 
      RowBox[{
       RowBox[{"can", "[", 
        RowBox[{"[", "37", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
         "0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "400"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.785634624749084*^9, 3.785634714503879*^9}, {
  3.785634875952468*^9, 3.7856348896313972`*^9}, {3.785634922000206*^9, 
  3.785634955661166*^9}, {3.7856349870142727`*^9, 3.7856350240825987`*^9}, {
  3.7856719221262407`*^9, 3.785671922395647*^9}, {3.785673389647855*^9, 
  3.785673389989414*^9}, {3.785673442725572*^9, 3.785673443579373*^9}, {
  3.785675598651286*^9, 3.785675598961424*^9}, {3.785675744070281*^9, 
  3.785675744148024*^9}, {3.7856758545621767`*^9, 3.785675855559906*^9}, {
  3.785675887016776*^9, 3.785675890294586*^9}},
 CellLabel->
  "(Debug) In[562]:=",ExpressionUUID->"f1d88394-4bee-4b6c-b3ef-ebecce8e51cb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6kyIsn7HE9Q8jfobHsf6azLBjf/6tz+bp1HUzQ0O97SYUCeVIzezfQpZy6dI
39BmguTB9+wbkhy0snRPPUWHCdKOZcMWHROowKP8qYcuE4TKwv2Mw8cRVeSU
+fldBF7z2v8FG48h1ex/wqf3/L++qwt1ZhS12139brmPCYfnT+u/ZAyj0CVB
36P6TDimGLTcsGEQmcSHGxgAE1QG+0MVRvoRj7Hy8m4DJrx3TUqqHu9Fn4Y+
ftl+iAnG1//uuq3Sg66EHGaqGDHh5zPKkm5AF1LUrdfZbMyEvOndn7PWd6LG
RtcxyaNMaHCw/sLzoR0F+0y9EzFhwuOO37kmGa3ISNHXXdCUCev+G70w19WE
FsrEt3KZM2HOpueia2MDyrz8umvaggmbdg8GhVyqRRfFdsaMWjEhOX2T0h5a
NZL9WGzfd4JYz+bppqLX39Gf09ZSbbZMWO8ybRebmI8ecXXX1tkx4ZZ2l6Od
2RMErylPKk4zQd2l6sKAzCc8dYTXrOQME0K37HLBe37i1JEnQgWOTFhxuV28
UbweS+7KvPfuPBMcHPwDbNN6cEXzgQOvXYj6ynlRZjsH8b3b1YuvLhD9iyYu
cTHYmF3Opvt7MGHo1FHNLUZTONHz1o57l5lQqDNW5Sczi+3Xi7CvezLh+b3E
XJ4/81jsc3QqhUTwa57YecVhCZee2ebmQWHCKq+vKy1suVhi5y9+iaQxwSXN
udCayc1yuBi7uopB7Jej907mAg/r7eVGR55rTGj3ysoqkOVlTZHXZercIPT1
ojvJ/BUvy4BpwnfBmwnRs152fG28rICb921e3GKC2EXyauV+XlbDnYLkH3eY
kP193VGhL7wsxQfTc4v3mCAjp/r8uz0vyytA67iWHxOqtM6LLf3mYX154hZ9
7iETpqvbdJyVeVgrwuPGnj1mgr519Bf3c9wsy8img6UBTHii1j5Y8IiLFRW3
PnQ2iAkKFvHlqVbL+F/S8X61J0x4UdU/PR+4iG9lYv/gUCYEFRZKKWjN4Z8f
Z1qLwpngLYDcpZNnsET+9u2cCCb4a6SVxsI0PlfkfndrJBP08uQ0WmY5OK00
vtYumgnWXL0hZ6om8dzP5q3+sUwID3RXpuRPYKMa8WsF8UzYGW5VmP5xHLc0
+8kqJDMht9n8oVkCGyt3srxOvGVC4tpbGhdmRzC1b7bIL5UJBY3vIwXPDmHW
kLZ4bhoTmnr4H5e4/MPC4x4XhjII/7s9yteb6cEnpxM+y35gQoXo95vJqzpx
/EKLkEU2E1bvG5M4rdmER7glHO5+JPwwmrn2vX413iNgnpH9mcAzJcBC2vkz
9hV+yNP/hQkPduvHPbuTjapFi6ylC5jQ6nw1fEtBNbooozPrXcQEG+VVt19m
9aCszZePvS9mwomerlhBsSHEtTUxsquECc63fMa4pcaQiXrbqPh3JnjUv1t+
NjWBwrZLGhj/YMI+qZ2KmkFTqFPX4tm1X4SfbcqVDtbMIM19j3pTK5lwJ/tU
jmTmHLp24Ouutmom6HCtOXlRcQGVGC08Ev3DBF6xN5F/5ReRmMnOloN1BP5H
0jSMUxbRGYsr2+gNhD/W6g/W4EWUbJN0O7mRyD969p0Proto8nT778ZmIi/u
CMW2v1lA4CSltLqN8KeV1KJP6Dx67GrJRB2Evo9oTGzbN4fqPB6Xk7qI/As3
j9FOnUHypGKZhB4mqHlqr/admUJX6ItX6vqYkK81M8vR5qDc67qFggNM2PWf
kabOpQlk4ZvscnmECb26JI2769jo1eOOj9Fswq8MFLFXYxj1B0uvqhlnQpmn
nZv9XeI9HWplz8dhgmMQqSFZvR/deumfpjtN+Getk8eKLb3oZ8w3LrdZJsS9
kBL0depGEolLli/nmVDkXe9/vLoTnUvRe/1rkdD3ZSisd+hAaRle08vLRL1q
O52xzjb0P32kmCo=
       "]]},
     Annotation[#, "Charting`Private`Tag$245712#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 400}, {-2.576118383354832, 2.557541391075517}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.785634876615767*^9, 3.7856348901751966`*^9}, {
   3.785634922883046*^9, 3.785634926073043*^9}, {3.785634957785222*^9, 
   3.7856350246034203`*^9}, 3.7856719231690702`*^9, 3.785673390396762*^9, 
   3.785673443994738*^9, 3.785675599379877*^9, 3.7856757446962767`*^9, 
   3.785675855965774*^9, {3.7856758875938673`*^9, 3.785675890853188*^9}},
 CellLabel->
  "(Debug) Out[563]=",ExpressionUUID->"b2849759-d81b-4e7b-90ce-1ca70e7ef570"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{316, Automatic}, {Automatic, 50}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4706, 144, 451, "Input",ExpressionUUID->"782d742f-fc98-4be2-ac56-74816e96ed6b"],
Cell[CellGroupData[{
Cell[5289, 168, 361, 9, 30, "Input",ExpressionUUID->"ccd9d247-b353-41b4-a5ad-e6546d9f336d"],
Cell[5653, 179, 659, 20, 61, "Output",ExpressionUUID->"58c13958-f9a0-4451-b128-b94ca14d5ea4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6349, 204, 1079, 29, 30, "Input",ExpressionUUID->"88b6bf90-f573-416e-b7b9-1f25217d4e24"],
Cell[7431, 235, 47234, 789, 371, "Output",ExpressionUUID->"5e34f3b0-74fd-40e7-9041-1802f02952d1"]
}, Open  ]],
Cell[54680, 1027, 3601, 109, 147, "Input",ExpressionUUID->"80b3e592-854f-4b64-87e5-aad6a6bc1ecd"],
Cell[58284, 1138, 3553, 101, 126, "Input",ExpressionUUID->"40b08115-e4af-4434-91ee-6999723d941c"],
Cell[61840, 1241, 48574, 1085, 2615, "Input",ExpressionUUID->"fe9a94a2-4624-4b68-828c-3dbcfd3a2def"],
Cell[110417, 2328, 6586, 169, 688, "Input",ExpressionUUID->"4bf5c7a0-491c-4d7a-b48a-f0f9cef712d0"],
Cell[117006, 2499, 156, 3, 30, "Input",ExpressionUUID->"0d987a4a-bc93-4c3b-86fc-c5db85dc6e0b"],
Cell[CellGroupData[{
Cell[117187, 2506, 269, 6, 41, "Input",ExpressionUUID->"62d146c0-c44b-4922-9e47-07bc92d9f0a3"],
Cell[117459, 2514, 188, 3, 45, "Output",ExpressionUUID->"0aa210c6-0de5-48c6-af4d-5ff9ed402d8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117684, 2522, 322, 6, 30, "Input",ExpressionUUID->"64ce093f-f6f5-4cbc-ba37-a9e44f705a14"],
Cell[118009, 2530, 454, 8, 45, "Output",ExpressionUUID->"8e719aef-0374-49b3-877d-271640ab22d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118500, 2543, 130, 3, 30, "Input",ExpressionUUID->"051b4c6d-465e-4fc1-849b-b261aa236ca9"],
Cell[118633, 2548, 178, 3, 45, "Output",ExpressionUUID->"fe7f037c-2af6-4c58-9bf3-314e179cedf4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118848, 2556, 221, 4, 30, "Input",ExpressionUUID->"1cc5a8ec-08ee-418f-8935-5d5790424a73"],
Cell[119072, 2562, 70017, 1164, 239, "Output",ExpressionUUID->"80af9e75-e650-4f83-b695-23a79cb7c37f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189126, 3731, 265, 5, 41, "Input",ExpressionUUID->"462971c3-314e-4ef3-8689-3453020f3704"],
Cell[189394, 3738, 208, 4, 45, "Output",ExpressionUUID->"b8db4753-fc9d-4da6-aaaa-9cf44f47d298"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189639, 3747, 188, 3, 30, "Input",ExpressionUUID->"b639940f-f55f-4b24-8517-31fd21cd2eb2"],
Cell[189830, 3752, 13809, 298, 802, "Output",ExpressionUUID->"51ac481b-88ee-496e-9a4f-15694295a13e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203676, 4055, 175, 3, 30, "Input",ExpressionUUID->"ea9dafc7-234d-4bfa-8aa6-65c4951db91b"],
Cell[203854, 4060, 204, 5, 45, "Output",ExpressionUUID->"3816d718-a56b-4bea-8144-5be77e96090d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204095, 4070, 256, 5, 30, "Input",ExpressionUUID->"e6d84bd7-b957-4dc1-af06-3896c602d4b6"],
Cell[204354, 4077, 174, 3, 45, "Output",ExpressionUUID->"b2a10075-1e02-4de0-aa01-9d6a7650f68e"]
}, Open  ]],
Cell[204543, 4083, 1235, 26, 157, "Input",ExpressionUUID->"d26d911a-ab34-4646-98fd-584c7e97dabb"],
Cell[CellGroupData[{
Cell[205803, 4113, 3742, 105, 252, "Input",ExpressionUUID->"fedea07d-a557-4e0d-af01-915878b55a23"],
Cell[209548, 4220, 1899, 31, 59, "Message",ExpressionUUID->"3577e86c-0baa-4369-87b0-795be7d0bde3"],
Cell[211450, 4253, 2074, 34, 59, "Message",ExpressionUUID->"41b06773-56c0-4e72-b5ff-1acaeddccecc"],
Cell[213527, 4289, 2074, 34, 59, "Message",ExpressionUUID->"39ee7b44-97b0-409b-8232-2f8f0264de14"],
Cell[215604, 4325, 2074, 34, 59, "Message",ExpressionUUID->"32a4cead-efbf-4e4e-af9b-27170208f35a"],
Cell[217681, 4361, 457, 10, 24, "Message",ExpressionUUID->"f73d066f-629c-47c9-8c87-6aecc20c50c0"],
Cell[218141, 4373, 6603, 118, 385, "Output",ExpressionUUID->"53a5156b-8b80-44ea-ab74-f99089e267f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224781, 4496, 482, 12, 30, "Input",ExpressionUUID->"db259982-8d4c-4d27-8b4b-24ee8e3efe48"],
Cell[225266, 4510, 438, 10, 45, "Output",ExpressionUUID->"c0721798-368a-4142-85fd-4bca4a1bf08e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225741, 4525, 313, 8, 30, "Input",ExpressionUUID->"d3758e6c-e9f5-4406-a834-1801b29577a4"],
Cell[226057, 4535, 278, 7, 45, "Output",ExpressionUUID->"7d2faf59-9b58-4c45-b0bd-7caffa7262a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226372, 4547, 1699, 41, 52, "Input",ExpressionUUID->"f1d88394-4bee-4b6c-b3ef-ebecce8e51cb"],
Cell[228074, 4590, 63927, 1067, 246, "Output",ExpressionUUID->"b2849759-d81b-4e7b-90ce-1ca70e7ef570"]
}, Open  ]]
}
]
*)

